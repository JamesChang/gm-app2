// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: res_captcha.proto

package proto.response;

public final class ResCaptcha {
  private ResCaptcha() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class CaptchaNewResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CaptchaNewResponse.newBuilder() to construct.
    private CaptchaNewResponse() {
      initFields();
    }
    private CaptchaNewResponse(boolean noInit) {}
    
    private static final CaptchaNewResponse defaultInstance;
    public static CaptchaNewResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CaptchaNewResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResCaptcha.internal_static_CaptchaNewResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResCaptcha.internal_static_CaptchaNewResponse_fieldAccessorTable;
    }
    
    // optional string captcha_link = 1;
    public static final int CAPTCHA_LINK_FIELD_NUMBER = 1;
    private boolean hasCaptchaLink;
    private java.lang.String captchaLink_ = "";
    public boolean hasCaptchaLink() { return hasCaptchaLink; }
    public java.lang.String getCaptchaLink() { return captchaLink_; }
    
    // optional string captcha_token = 2;
    public static final int CAPTCHA_TOKEN_FIELD_NUMBER = 2;
    private boolean hasCaptchaToken;
    private java.lang.String captchaToken_ = "";
    public boolean hasCaptchaToken() { return hasCaptchaToken; }
    public java.lang.String getCaptchaToken() { return captchaToken_; }
    
    // optional string captcha_simple_token = 3;
    public static final int CAPTCHA_SIMPLE_TOKEN_FIELD_NUMBER = 3;
    private boolean hasCaptchaSimpleToken;
    private java.lang.String captchaSimpleToken_ = "";
    public boolean hasCaptchaSimpleToken() { return hasCaptchaSimpleToken; }
    public java.lang.String getCaptchaSimpleToken() { return captchaSimpleToken_; }
    
    private void initFields() {
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResCaptcha.CaptchaNewResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResCaptcha.CaptchaNewResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResCaptcha.CaptchaNewResponse result;
      
      // Construct using proto.response.ResCaptcha.CaptchaNewResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResCaptcha.CaptchaNewResponse();
        return builder;
      }
      
      protected proto.response.ResCaptcha.CaptchaNewResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResCaptcha.CaptchaNewResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResCaptcha.CaptchaNewResponse.getDescriptor();
      }
      
      public proto.response.ResCaptcha.CaptchaNewResponse getDefaultInstanceForType() {
        return proto.response.ResCaptcha.CaptchaNewResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResCaptcha.CaptchaNewResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResCaptcha.CaptchaNewResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResCaptcha.CaptchaNewResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        proto.response.ResCaptcha.CaptchaNewResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional string captcha_link = 1;
      public boolean hasCaptchaLink() {
        return result.hasCaptchaLink();
      }
      public java.lang.String getCaptchaLink() {
        return result.getCaptchaLink();
      }
      public Builder setCaptchaLink(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCaptchaLink = true;
        result.captchaLink_ = value;
        return this;
      }
      public Builder clearCaptchaLink() {
        result.hasCaptchaLink = false;
        result.captchaLink_ = getDefaultInstance().getCaptchaLink();
        return this;
      }
      
      // optional string captcha_token = 2;
      public boolean hasCaptchaToken() {
        return result.hasCaptchaToken();
      }
      public java.lang.String getCaptchaToken() {
        return result.getCaptchaToken();
      }
      public Builder setCaptchaToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCaptchaToken = true;
        result.captchaToken_ = value;
        return this;
      }
      public Builder clearCaptchaToken() {
        result.hasCaptchaToken = false;
        result.captchaToken_ = getDefaultInstance().getCaptchaToken();
        return this;
      }
      
      // optional string captcha_simple_token = 3;
      public boolean hasCaptchaSimpleToken() {
        return result.hasCaptchaSimpleToken();
      }
      public java.lang.String getCaptchaSimpleToken() {
        return result.getCaptchaSimpleToken();
      }
      public Builder setCaptchaSimpleToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCaptchaSimpleToken = true;
        result.captchaSimpleToken_ = value;
        return this;
      }
      public Builder clearCaptchaSimpleToken() {
        result.hasCaptchaSimpleToken = false;
        result.captchaSimpleToken_ = getDefaultInstance().getCaptchaSimpleToken();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:CaptchaNewResponse)
    }
    
    static {
      defaultInstance = new CaptchaNewResponse(true);
      proto.response.ResCaptcha.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:CaptchaNewResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_CaptchaNewResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CaptchaNewResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021res_captcha.proto\"_\n\022CaptchaNewRespons" +
      "e\022\024\n\014captcha_link\030\001 \001(\t\022\025\n\rcaptcha_token" +
      "\030\002 \001(\t\022\034\n\024captcha_simple_token\030\003 \001(\tB\022\n\016" +
      "proto.responseH\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_CaptchaNewResponse_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_CaptchaNewResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_CaptchaNewResponse_descriptor,
              new java.lang.String[] { "CaptchaLink", "CaptchaToken", "CaptchaSimpleToken", },
              proto.response.ResCaptcha.CaptchaNewResponse.class,
              proto.response.ResCaptcha.CaptchaNewResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
