// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: res_game.proto

package proto.response;

public final class ResGame {
  private ResGame() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class LogicalGame extends
      com.google.protobuf.GeneratedMessage {
    // Use LogicalGame.newBuilder() to construct.
    private LogicalGame() {
      initFields();
    }
    private LogicalGame(boolean noInit) {}
    
    private static final LogicalGame defaultInstance;
    public static LogicalGame getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogicalGame getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_LogicalGame_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_LogicalGame_fieldAccessorTable;
    }
    
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated string modes = 3;
    public static final int MODES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> modes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getModesList() {
      return modes_;
    }
    public int getModesCount() { return modes_.size(); }
    public java.lang.String getModes(int index) {
      return modes_.get(index);
    }
    
    private void initFields() {
    }
    public static proto.response.ResGame.LogicalGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.LogicalGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.LogicalGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.LogicalGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.LogicalGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.LogicalGame result;
      
      // Construct using proto.response.ResGame.LogicalGame.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.LogicalGame();
        return builder;
      }
      
      protected proto.response.ResGame.LogicalGame internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.LogicalGame();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.LogicalGame.getDescriptor();
      }
      
      public proto.response.ResGame.LogicalGame getDefaultInstanceForType() {
        return proto.response.ResGame.LogicalGame.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.LogicalGame build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.LogicalGame buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.LogicalGame buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.modes_ != java.util.Collections.EMPTY_LIST) {
          result.modes_ =
            java.util.Collections.unmodifiableList(result.modes_);
        }
        proto.response.ResGame.LogicalGame returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional uint32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated string modes = 3;
      public java.util.List<java.lang.String> getModesList() {
        return java.util.Collections.unmodifiableList(result.modes_);
      }
      public int getModesCount() {
        return result.getModesCount();
      }
      public java.lang.String getModes(int index) {
        return result.getModes(index);
      }
      public Builder setModes(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.modes_.set(index, value);
        return this;
      }
      public Builder addModes(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.modes_.isEmpty()) {
          result.modes_ = new java.util.ArrayList<java.lang.String>();
        }
        result.modes_.add(value);
        return this;
      }
      public Builder addAllModes(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.modes_.isEmpty()) {
          result.modes_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.modes_);
        return this;
      }
      public Builder clearModes() {
        result.modes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LogicalGame)
    }
    
    static {
      defaultInstance = new LogicalGame(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LogicalGame)
  }
  
  public static final class LogicalGameList extends
      com.google.protobuf.GeneratedMessage {
    // Use LogicalGameList.newBuilder() to construct.
    private LogicalGameList() {
      initFields();
    }
    private LogicalGameList(boolean noInit) {}
    
    private static final LogicalGameList defaultInstance;
    public static LogicalGameList getDefaultInstance() {
      return defaultInstance;
    }
    
    public LogicalGameList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_LogicalGameList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_LogicalGameList_fieldAccessorTable;
    }
    
    // repeated .LogicalGame logicalGames = 1;
    public static final int LOGICALGAMES_FIELD_NUMBER = 1;
    private java.util.List<proto.response.ResGame.LogicalGame> logicalGames_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResGame.LogicalGame> getLogicalGamesList() {
      return logicalGames_;
    }
    public int getLogicalGamesCount() { return logicalGames_.size(); }
    public proto.response.ResGame.LogicalGame getLogicalGames(int index) {
      return logicalGames_.get(index);
    }
    
    private void initFields() {
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.LogicalGameList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.LogicalGameList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.LogicalGameList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.LogicalGameList result;
      
      // Construct using proto.response.ResGame.LogicalGameList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.LogicalGameList();
        return builder;
      }
      
      protected proto.response.ResGame.LogicalGameList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.LogicalGameList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.LogicalGameList.getDescriptor();
      }
      
      public proto.response.ResGame.LogicalGameList getDefaultInstanceForType() {
        return proto.response.ResGame.LogicalGameList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.LogicalGameList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.LogicalGameList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.LogicalGameList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.logicalGames_ != java.util.Collections.EMPTY_LIST) {
          result.logicalGames_ =
            java.util.Collections.unmodifiableList(result.logicalGames_);
        }
        proto.response.ResGame.LogicalGameList returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // repeated .LogicalGame logicalGames = 1;
      public java.util.List<proto.response.ResGame.LogicalGame> getLogicalGamesList() {
        return java.util.Collections.unmodifiableList(result.logicalGames_);
      }
      public int getLogicalGamesCount() {
        return result.getLogicalGamesCount();
      }
      public proto.response.ResGame.LogicalGame getLogicalGames(int index) {
        return result.getLogicalGames(index);
      }
      public Builder setLogicalGames(int index, proto.response.ResGame.LogicalGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.logicalGames_.set(index, value);
        return this;
      }
      public Builder setLogicalGames(int index, proto.response.ResGame.LogicalGame.Builder builderForValue) {
        result.logicalGames_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLogicalGames(proto.response.ResGame.LogicalGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.logicalGames_.isEmpty()) {
          result.logicalGames_ = new java.util.ArrayList<proto.response.ResGame.LogicalGame>();
        }
        result.logicalGames_.add(value);
        return this;
      }
      public Builder addLogicalGames(proto.response.ResGame.LogicalGame.Builder builderForValue) {
        if (result.logicalGames_.isEmpty()) {
          result.logicalGames_ = new java.util.ArrayList<proto.response.ResGame.LogicalGame>();
        }
        result.logicalGames_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLogicalGames(
          java.lang.Iterable<? extends proto.response.ResGame.LogicalGame> values) {
        if (result.logicalGames_.isEmpty()) {
          result.logicalGames_ = new java.util.ArrayList<proto.response.ResGame.LogicalGame>();
        }
        super.addAll(values, result.logicalGames_);
        return this;
      }
      public Builder clearLogicalGames() {
        result.logicalGames_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:LogicalGameList)
    }
    
    static {
      defaultInstance = new LogicalGameList(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:LogicalGameList)
  }
  
  public static final class PhysicalGame extends
      com.google.protobuf.GeneratedMessage {
    // Use PhysicalGame.newBuilder() to construct.
    private PhysicalGame() {
      initFields();
    }
    private PhysicalGame(boolean noInit) {}
    
    private static final PhysicalGame defaultInstance;
    public static PhysicalGame getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhysicalGame getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_PhysicalGame_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_PhysicalGame_fieldAccessorTable;
    }
    
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated .PhysicalGameVersion versions = 3;
    public static final int VERSIONS_FIELD_NUMBER = 3;
    private java.util.List<proto.response.ResGame.PhysicalGameVersion> versions_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResGame.PhysicalGameVersion> getVersionsList() {
      return versions_;
    }
    public int getVersionsCount() { return versions_.size(); }
    public proto.response.ResGame.PhysicalGameVersion getVersions(int index) {
      return versions_.get(index);
    }
    
    // optional .PhysicalGameVersion version = 4;
    public static final int VERSION_FIELD_NUMBER = 4;
    private boolean hasVersion;
    private proto.response.ResGame.PhysicalGameVersion version_;
    public boolean hasVersion() { return hasVersion; }
    public proto.response.ResGame.PhysicalGameVersion getVersion() { return version_; }
    
    private void initFields() {
      version_ = proto.response.ResGame.PhysicalGameVersion.getDefaultInstance();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.PhysicalGame parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGame parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.PhysicalGame prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.PhysicalGame result;
      
      // Construct using proto.response.ResGame.PhysicalGame.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.PhysicalGame();
        return builder;
      }
      
      protected proto.response.ResGame.PhysicalGame internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.PhysicalGame();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.PhysicalGame.getDescriptor();
      }
      
      public proto.response.ResGame.PhysicalGame getDefaultInstanceForType() {
        return proto.response.ResGame.PhysicalGame.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.PhysicalGame build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.PhysicalGame buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.PhysicalGame buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.versions_ != java.util.Collections.EMPTY_LIST) {
          result.versions_ =
            java.util.Collections.unmodifiableList(result.versions_);
        }
        proto.response.ResGame.PhysicalGame returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional uint32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated .PhysicalGameVersion versions = 3;
      public java.util.List<proto.response.ResGame.PhysicalGameVersion> getVersionsList() {
        return java.util.Collections.unmodifiableList(result.versions_);
      }
      public int getVersionsCount() {
        return result.getVersionsCount();
      }
      public proto.response.ResGame.PhysicalGameVersion getVersions(int index) {
        return result.getVersions(index);
      }
      public Builder setVersions(int index, proto.response.ResGame.PhysicalGameVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.versions_.set(index, value);
        return this;
      }
      public Builder setVersions(int index, proto.response.ResGame.PhysicalGameVersion.Builder builderForValue) {
        result.versions_.set(index, builderForValue.build());
        return this;
      }
      public Builder addVersions(proto.response.ResGame.PhysicalGameVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.versions_.isEmpty()) {
          result.versions_ = new java.util.ArrayList<proto.response.ResGame.PhysicalGameVersion>();
        }
        result.versions_.add(value);
        return this;
      }
      public Builder addVersions(proto.response.ResGame.PhysicalGameVersion.Builder builderForValue) {
        if (result.versions_.isEmpty()) {
          result.versions_ = new java.util.ArrayList<proto.response.ResGame.PhysicalGameVersion>();
        }
        result.versions_.add(builderForValue.build());
        return this;
      }
      public Builder addAllVersions(
          java.lang.Iterable<? extends proto.response.ResGame.PhysicalGameVersion> values) {
        if (result.versions_.isEmpty()) {
          result.versions_ = new java.util.ArrayList<proto.response.ResGame.PhysicalGameVersion>();
        }
        super.addAll(values, result.versions_);
        return this;
      }
      public Builder clearVersions() {
        result.versions_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .PhysicalGameVersion version = 4;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public proto.response.ResGame.PhysicalGameVersion getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(proto.response.ResGame.PhysicalGameVersion value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder setVersion(proto.response.ResGame.PhysicalGameVersion.Builder builderForValue) {
        result.hasVersion = true;
        result.version_ = builderForValue.build();
        return this;
      }
      public Builder mergeVersion(proto.response.ResGame.PhysicalGameVersion value) {
        if (result.hasVersion() &&
            result.version_ != proto.response.ResGame.PhysicalGameVersion.getDefaultInstance()) {
          result.version_ =
            proto.response.ResGame.PhysicalGameVersion.newBuilder(result.version_).mergeFrom(value).buildPartial();
        } else {
          result.version_ = value;
        }
        result.hasVersion = true;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = proto.response.ResGame.PhysicalGameVersion.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PhysicalGame)
    }
    
    static {
      defaultInstance = new PhysicalGame(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PhysicalGame)
  }
  
  public static final class PhysicalGameList extends
      com.google.protobuf.GeneratedMessage {
    // Use PhysicalGameList.newBuilder() to construct.
    private PhysicalGameList() {
      initFields();
    }
    private PhysicalGameList(boolean noInit) {}
    
    private static final PhysicalGameList defaultInstance;
    public static PhysicalGameList getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhysicalGameList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_PhysicalGameList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_PhysicalGameList_fieldAccessorTable;
    }
    
    // repeated .PhysicalGame physicalGames = 1;
    public static final int PHYSICALGAMES_FIELD_NUMBER = 1;
    private java.util.List<proto.response.ResGame.PhysicalGame> physicalGames_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResGame.PhysicalGame> getPhysicalGamesList() {
      return physicalGames_;
    }
    public int getPhysicalGamesCount() { return physicalGames_.size(); }
    public proto.response.ResGame.PhysicalGame getPhysicalGames(int index) {
      return physicalGames_.get(index);
    }
    
    private void initFields() {
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.PhysicalGameList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.PhysicalGameList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.PhysicalGameList result;
      
      // Construct using proto.response.ResGame.PhysicalGameList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.PhysicalGameList();
        return builder;
      }
      
      protected proto.response.ResGame.PhysicalGameList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.PhysicalGameList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.PhysicalGameList.getDescriptor();
      }
      
      public proto.response.ResGame.PhysicalGameList getDefaultInstanceForType() {
        return proto.response.ResGame.PhysicalGameList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.PhysicalGameList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.PhysicalGameList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.PhysicalGameList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.physicalGames_ != java.util.Collections.EMPTY_LIST) {
          result.physicalGames_ =
            java.util.Collections.unmodifiableList(result.physicalGames_);
        }
        proto.response.ResGame.PhysicalGameList returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // repeated .PhysicalGame physicalGames = 1;
      public java.util.List<proto.response.ResGame.PhysicalGame> getPhysicalGamesList() {
        return java.util.Collections.unmodifiableList(result.physicalGames_);
      }
      public int getPhysicalGamesCount() {
        return result.getPhysicalGamesCount();
      }
      public proto.response.ResGame.PhysicalGame getPhysicalGames(int index) {
        return result.getPhysicalGames(index);
      }
      public Builder setPhysicalGames(int index, proto.response.ResGame.PhysicalGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.physicalGames_.set(index, value);
        return this;
      }
      public Builder setPhysicalGames(int index, proto.response.ResGame.PhysicalGame.Builder builderForValue) {
        result.physicalGames_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPhysicalGames(proto.response.ResGame.PhysicalGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.physicalGames_.isEmpty()) {
          result.physicalGames_ = new java.util.ArrayList<proto.response.ResGame.PhysicalGame>();
        }
        result.physicalGames_.add(value);
        return this;
      }
      public Builder addPhysicalGames(proto.response.ResGame.PhysicalGame.Builder builderForValue) {
        if (result.physicalGames_.isEmpty()) {
          result.physicalGames_ = new java.util.ArrayList<proto.response.ResGame.PhysicalGame>();
        }
        result.physicalGames_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPhysicalGames(
          java.lang.Iterable<? extends proto.response.ResGame.PhysicalGame> values) {
        if (result.physicalGames_.isEmpty()) {
          result.physicalGames_ = new java.util.ArrayList<proto.response.ResGame.PhysicalGame>();
        }
        super.addAll(values, result.physicalGames_);
        return this;
      }
      public Builder clearPhysicalGames() {
        result.physicalGames_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PhysicalGameList)
    }
    
    static {
      defaultInstance = new PhysicalGameList(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PhysicalGameList)
  }
  
  public static final class PhysicalGameVersion extends
      com.google.protobuf.GeneratedMessage {
    // Use PhysicalGameVersion.newBuilder() to construct.
    private PhysicalGameVersion() {
      initFields();
    }
    private PhysicalGameVersion(boolean noInit) {}
    
    private static final PhysicalGameVersion defaultInstance;
    public static PhysicalGameVersion getDefaultInstance() {
      return defaultInstance;
    }
    
    public PhysicalGameVersion getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_PhysicalGameVersion_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_PhysicalGameVersion_fieldAccessorTable;
    }
    
    // optional string code = 1;
    public static final int CODE_FIELD_NUMBER = 1;
    private boolean hasCode;
    private java.lang.String code_ = "";
    public boolean hasCode() { return hasCode; }
    public java.lang.String getCode() { return code_; }
    
    // optional string display = 2;
    public static final int DISPLAY_FIELD_NUMBER = 2;
    private boolean hasDisplay;
    private java.lang.String display_ = "";
    public boolean hasDisplay() { return hasDisplay; }
    public java.lang.String getDisplay() { return display_; }
    
    // optional string file = 3;
    public static final int FILE_FIELD_NUMBER = 3;
    private boolean hasFile;
    private java.lang.String file_ = "";
    public boolean hasFile() { return hasFile; }
    public java.lang.String getFile() { return file_; }
    
    // optional string digest = 4;
    public static final int DIGEST_FIELD_NUMBER = 4;
    private boolean hasDigest;
    private java.lang.String digest_ = "";
    public boolean hasDigest() { return hasDigest; }
    public java.lang.String getDigest() { return digest_; }
    
    private void initFields() {
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.PhysicalGameVersion parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.PhysicalGameVersion parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.PhysicalGameVersion prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.PhysicalGameVersion result;
      
      // Construct using proto.response.ResGame.PhysicalGameVersion.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.PhysicalGameVersion();
        return builder;
      }
      
      protected proto.response.ResGame.PhysicalGameVersion internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.PhysicalGameVersion();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.PhysicalGameVersion.getDescriptor();
      }
      
      public proto.response.ResGame.PhysicalGameVersion getDefaultInstanceForType() {
        return proto.response.ResGame.PhysicalGameVersion.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.PhysicalGameVersion build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.PhysicalGameVersion buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.PhysicalGameVersion buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        proto.response.ResGame.PhysicalGameVersion returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional string code = 1;
      public boolean hasCode() {
        return result.hasCode();
      }
      public java.lang.String getCode() {
        return result.getCode();
      }
      public Builder setCode(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCode = true;
        result.code_ = value;
        return this;
      }
      public Builder clearCode() {
        result.hasCode = false;
        result.code_ = getDefaultInstance().getCode();
        return this;
      }
      
      // optional string display = 2;
      public boolean hasDisplay() {
        return result.hasDisplay();
      }
      public java.lang.String getDisplay() {
        return result.getDisplay();
      }
      public Builder setDisplay(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDisplay = true;
        result.display_ = value;
        return this;
      }
      public Builder clearDisplay() {
        result.hasDisplay = false;
        result.display_ = getDefaultInstance().getDisplay();
        return this;
      }
      
      // optional string file = 3;
      public boolean hasFile() {
        return result.hasFile();
      }
      public java.lang.String getFile() {
        return result.getFile();
      }
      public Builder setFile(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasFile = true;
        result.file_ = value;
        return this;
      }
      public Builder clearFile() {
        result.hasFile = false;
        result.file_ = getDefaultInstance().getFile();
        return this;
      }
      
      // optional string digest = 4;
      public boolean hasDigest() {
        return result.hasDigest();
      }
      public java.lang.String getDigest() {
        return result.getDigest();
      }
      public Builder setDigest(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDigest = true;
        result.digest_ = value;
        return this;
      }
      public Builder clearDigest() {
        result.hasDigest = false;
        result.digest_ = getDefaultInstance().getDigest();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PhysicalGameVersion)
    }
    
    static {
      defaultInstance = new PhysicalGameVersion(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PhysicalGameVersion)
  }
  
  public static final class Map extends
      com.google.protobuf.GeneratedMessage {
    // Use Map.newBuilder() to construct.
    private Map() {
      initFields();
    }
    private Map(boolean noInit) {}
    
    private static final Map defaultInstance;
    public static Map getDefaultInstance() {
      return defaultInstance;
    }
    
    public Map getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_Map_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_Map_fieldAccessorTable;
    }
    
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string version = 3;
    public static final int VERSION_FIELD_NUMBER = 3;
    private boolean hasVersion;
    private java.lang.String version_ = "";
    public boolean hasVersion() { return hasVersion; }
    public java.lang.String getVersion() { return version_; }
    
    // optional uint32 physicalGameID = 4;
    public static final int PHYSICALGAMEID_FIELD_NUMBER = 4;
    private boolean hasPhysicalGameID;
    private int physicalGameID_ = 0;
    public boolean hasPhysicalGameID() { return hasPhysicalGameID; }
    public int getPhysicalGameID() { return physicalGameID_; }
    
    // optional string physicalGameVersionLimit = 5;
    public static final int PHYSICALGAMEVERSIONLIMIT_FIELD_NUMBER = 5;
    private boolean hasPhysicalGameVersionLimit;
    private java.lang.String physicalGameVersionLimit_ = "";
    public boolean hasPhysicalGameVersionLimit() { return hasPhysicalGameVersionLimit; }
    public java.lang.String getPhysicalGameVersionLimit() { return physicalGameVersionLimit_; }
    
    // optional string digest = 6;
    public static final int DIGEST_FIELD_NUMBER = 6;
    private boolean hasDigest;
    private java.lang.String digest_ = "";
    public boolean hasDigest() { return hasDigest; }
    public java.lang.String getDigest() { return digest_; }
    
    // optional string downloadLink = 7;
    public static final int DOWNLOADLINK_FIELD_NUMBER = 7;
    private boolean hasDownloadLink;
    private java.lang.String downloadLink_ = "";
    public boolean hasDownloadLink() { return hasDownloadLink; }
    public java.lang.String getDownloadLink() { return downloadLink_; }
    
    // optional uint32 fileSize = 8;
    public static final int FILESIZE_FIELD_NUMBER = 8;
    private boolean hasFileSize;
    private int fileSize_ = 0;
    public boolean hasFileSize() { return hasFileSize; }
    public int getFileSize() { return fileSize_; }
    
    // optional string thumbnail = 9;
    public static final int THUMBNAIL_FIELD_NUMBER = 9;
    private boolean hasThumbnail;
    private java.lang.String thumbnail_ = "";
    public boolean hasThumbnail() { return hasThumbnail; }
    public java.lang.String getThumbnail() { return thumbnail_; }
    
    private void initFields() {
    }
    public static proto.response.ResGame.Map parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.Map parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.Map parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.Map parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.Map parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.Map parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.Map parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.Map parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.Map parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.Map parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.Map prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.Map result;
      
      // Construct using proto.response.ResGame.Map.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.Map();
        return builder;
      }
      
      protected proto.response.ResGame.Map internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.Map();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.Map.getDescriptor();
      }
      
      public proto.response.ResGame.Map getDefaultInstanceForType() {
        return proto.response.ResGame.Map.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.Map build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.Map buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.Map buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        proto.response.ResGame.Map returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional uint32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string version = 3;
      public boolean hasVersion() {
        return result.hasVersion();
      }
      public java.lang.String getVersion() {
        return result.getVersion();
      }
      public Builder setVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder clearVersion() {
        result.hasVersion = false;
        result.version_ = getDefaultInstance().getVersion();
        return this;
      }
      
      // optional uint32 physicalGameID = 4;
      public boolean hasPhysicalGameID() {
        return result.hasPhysicalGameID();
      }
      public int getPhysicalGameID() {
        return result.getPhysicalGameID();
      }
      public Builder setPhysicalGameID(int value) {
        result.hasPhysicalGameID = true;
        result.physicalGameID_ = value;
        return this;
      }
      public Builder clearPhysicalGameID() {
        result.hasPhysicalGameID = false;
        result.physicalGameID_ = 0;
        return this;
      }
      
      // optional string physicalGameVersionLimit = 5;
      public boolean hasPhysicalGameVersionLimit() {
        return result.hasPhysicalGameVersionLimit();
      }
      public java.lang.String getPhysicalGameVersionLimit() {
        return result.getPhysicalGameVersionLimit();
      }
      public Builder setPhysicalGameVersionLimit(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhysicalGameVersionLimit = true;
        result.physicalGameVersionLimit_ = value;
        return this;
      }
      public Builder clearPhysicalGameVersionLimit() {
        result.hasPhysicalGameVersionLimit = false;
        result.physicalGameVersionLimit_ = getDefaultInstance().getPhysicalGameVersionLimit();
        return this;
      }
      
      // optional string digest = 6;
      public boolean hasDigest() {
        return result.hasDigest();
      }
      public java.lang.String getDigest() {
        return result.getDigest();
      }
      public Builder setDigest(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDigest = true;
        result.digest_ = value;
        return this;
      }
      public Builder clearDigest() {
        result.hasDigest = false;
        result.digest_ = getDefaultInstance().getDigest();
        return this;
      }
      
      // optional string downloadLink = 7;
      public boolean hasDownloadLink() {
        return result.hasDownloadLink();
      }
      public java.lang.String getDownloadLink() {
        return result.getDownloadLink();
      }
      public Builder setDownloadLink(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDownloadLink = true;
        result.downloadLink_ = value;
        return this;
      }
      public Builder clearDownloadLink() {
        result.hasDownloadLink = false;
        result.downloadLink_ = getDefaultInstance().getDownloadLink();
        return this;
      }
      
      // optional uint32 fileSize = 8;
      public boolean hasFileSize() {
        return result.hasFileSize();
      }
      public int getFileSize() {
        return result.getFileSize();
      }
      public Builder setFileSize(int value) {
        result.hasFileSize = true;
        result.fileSize_ = value;
        return this;
      }
      public Builder clearFileSize() {
        result.hasFileSize = false;
        result.fileSize_ = 0;
        return this;
      }
      
      // optional string thumbnail = 9;
      public boolean hasThumbnail() {
        return result.hasThumbnail();
      }
      public java.lang.String getThumbnail() {
        return result.getThumbnail();
      }
      public Builder setThumbnail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasThumbnail = true;
        result.thumbnail_ = value;
        return this;
      }
      public Builder clearThumbnail() {
        result.hasThumbnail = false;
        result.thumbnail_ = getDefaultInstance().getThumbnail();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:Map)
    }
    
    static {
      defaultInstance = new Map(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:Map)
  }
  
  public static final class MapList extends
      com.google.protobuf.GeneratedMessage {
    // Use MapList.newBuilder() to construct.
    private MapList() {
      initFields();
    }
    private MapList(boolean noInit) {}
    
    private static final MapList defaultInstance;
    public static MapList getDefaultInstance() {
      return defaultInstance;
    }
    
    public MapList getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_MapList_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_MapList_fieldAccessorTable;
    }
    
    // repeated .Map maps = 1;
    public static final int MAPS_FIELD_NUMBER = 1;
    private java.util.List<proto.response.ResGame.Map> maps_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResGame.Map> getMapsList() {
      return maps_;
    }
    public int getMapsCount() { return maps_.size(); }
    public proto.response.ResGame.Map getMaps(int index) {
      return maps_.get(index);
    }
    
    // optional .ListParams params = 2;
    public static final int PARAMS_FIELD_NUMBER = 2;
    private boolean hasParams;
    private proto.response.ResListbase.ListParams params_;
    public boolean hasParams() { return hasParams; }
    public proto.response.ResListbase.ListParams getParams() { return params_; }
    
    private void initFields() {
      params_ = proto.response.ResListbase.ListParams.getDefaultInstance();
    }
    public static proto.response.ResGame.MapList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.MapList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.MapList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.MapList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.MapList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.MapList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.MapList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.MapList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.MapList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.MapList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.MapList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.MapList result;
      
      // Construct using proto.response.ResGame.MapList.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.MapList();
        return builder;
      }
      
      protected proto.response.ResGame.MapList internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.MapList();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.MapList.getDescriptor();
      }
      
      public proto.response.ResGame.MapList getDefaultInstanceForType() {
        return proto.response.ResGame.MapList.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.MapList build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.MapList buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.MapList buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.maps_ != java.util.Collections.EMPTY_LIST) {
          result.maps_ =
            java.util.Collections.unmodifiableList(result.maps_);
        }
        proto.response.ResGame.MapList returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // repeated .Map maps = 1;
      public java.util.List<proto.response.ResGame.Map> getMapsList() {
        return java.util.Collections.unmodifiableList(result.maps_);
      }
      public int getMapsCount() {
        return result.getMapsCount();
      }
      public proto.response.ResGame.Map getMaps(int index) {
        return result.getMaps(index);
      }
      public Builder setMaps(int index, proto.response.ResGame.Map value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.maps_.set(index, value);
        return this;
      }
      public Builder setMaps(int index, proto.response.ResGame.Map.Builder builderForValue) {
        result.maps_.set(index, builderForValue.build());
        return this;
      }
      public Builder addMaps(proto.response.ResGame.Map value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.maps_.isEmpty()) {
          result.maps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        result.maps_.add(value);
        return this;
      }
      public Builder addMaps(proto.response.ResGame.Map.Builder builderForValue) {
        if (result.maps_.isEmpty()) {
          result.maps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        result.maps_.add(builderForValue.build());
        return this;
      }
      public Builder addAllMaps(
          java.lang.Iterable<? extends proto.response.ResGame.Map> values) {
        if (result.maps_.isEmpty()) {
          result.maps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        super.addAll(values, result.maps_);
        return this;
      }
      public Builder clearMaps() {
        result.maps_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .ListParams params = 2;
      public boolean hasParams() {
        return result.hasParams();
      }
      public proto.response.ResListbase.ListParams getParams() {
        return result.getParams();
      }
      public Builder setParams(proto.response.ResListbase.ListParams value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasParams = true;
        result.params_ = value;
        return this;
      }
      public Builder setParams(proto.response.ResListbase.ListParams.Builder builderForValue) {
        result.hasParams = true;
        result.params_ = builderForValue.build();
        return this;
      }
      public Builder mergeParams(proto.response.ResListbase.ListParams value) {
        if (result.hasParams() &&
            result.params_ != proto.response.ResListbase.ListParams.getDefaultInstance()) {
          result.params_ =
            proto.response.ResListbase.ListParams.newBuilder(result.params_).mergeFrom(value).buildPartial();
        } else {
          result.params_ = value;
        }
        result.hasParams = true;
        return this;
      }
      public Builder clearParams() {
        result.hasParams = false;
        result.params_ = proto.response.ResListbase.ListParams.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:MapList)
    }
    
    static {
      defaultInstance = new MapList(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:MapList)
  }
  
  public static final class EventGet extends
      com.google.protobuf.GeneratedMessage {
    // Use EventGet.newBuilder() to construct.
    private EventGet() {
      initFields();
    }
    private EventGet(boolean noInit) {}
    
    private static final EventGet defaultInstance;
    public static EventGet getDefaultInstance() {
      return defaultInstance;
    }
    
    public EventGet getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResGame.internal_static_EventGet_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResGame.internal_static_EventGet_fieldAccessorTable;
    }
    
    // optional uint32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional .PhysicalGame physical_game = 3;
    public static final int PHYSICAL_GAME_FIELD_NUMBER = 3;
    private boolean hasPhysicalGame;
    private proto.response.ResGame.PhysicalGame physicalGame_;
    public boolean hasPhysicalGame() { return hasPhysicalGame; }
    public proto.response.ResGame.PhysicalGame getPhysicalGame() { return physicalGame_; }
    
    // repeated .Map required_maps = 4;
    public static final int REQUIRED_MAPS_FIELD_NUMBER = 4;
    private java.util.List<proto.response.ResGame.Map> requiredMaps_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResGame.Map> getRequiredMapsList() {
      return requiredMaps_;
    }
    public int getRequiredMapsCount() { return requiredMaps_.size(); }
    public proto.response.ResGame.Map getRequiredMaps(int index) {
      return requiredMaps_.get(index);
    }
    
    // repeated .Map optional_maps = 5;
    public static final int OPTIONAL_MAPS_FIELD_NUMBER = 5;
    private java.util.List<proto.response.ResGame.Map> optionalMaps_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResGame.Map> getOptionalMapsList() {
      return optionalMaps_;
    }
    public int getOptionalMapsCount() { return optionalMaps_.size(); }
    public proto.response.ResGame.Map getOptionalMaps(int index) {
      return optionalMaps_.get(index);
    }
    
    private void initFields() {
      physicalGame_ = proto.response.ResGame.PhysicalGame.getDefaultInstance();
    }
    public static proto.response.ResGame.EventGet parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.EventGet parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.EventGet parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResGame.EventGet parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.EventGet parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.EventGet parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResGame.EventGet parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.EventGet parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResGame.EventGet parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResGame.EventGet parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResGame.EventGet prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResGame.EventGet result;
      
      // Construct using proto.response.ResGame.EventGet.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResGame.EventGet();
        return builder;
      }
      
      protected proto.response.ResGame.EventGet internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResGame.EventGet();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResGame.EventGet.getDescriptor();
      }
      
      public proto.response.ResGame.EventGet getDefaultInstanceForType() {
        return proto.response.ResGame.EventGet.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResGame.EventGet build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResGame.EventGet buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResGame.EventGet buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.requiredMaps_ != java.util.Collections.EMPTY_LIST) {
          result.requiredMaps_ =
            java.util.Collections.unmodifiableList(result.requiredMaps_);
        }
        if (result.optionalMaps_ != java.util.Collections.EMPTY_LIST) {
          result.optionalMaps_ =
            java.util.Collections.unmodifiableList(result.optionalMaps_);
        }
        proto.response.ResGame.EventGet returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // optional uint32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional .PhysicalGame physical_game = 3;
      public boolean hasPhysicalGame() {
        return result.hasPhysicalGame();
      }
      public proto.response.ResGame.PhysicalGame getPhysicalGame() {
        return result.getPhysicalGame();
      }
      public Builder setPhysicalGame(proto.response.ResGame.PhysicalGame value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPhysicalGame = true;
        result.physicalGame_ = value;
        return this;
      }
      public Builder setPhysicalGame(proto.response.ResGame.PhysicalGame.Builder builderForValue) {
        result.hasPhysicalGame = true;
        result.physicalGame_ = builderForValue.build();
        return this;
      }
      public Builder mergePhysicalGame(proto.response.ResGame.PhysicalGame value) {
        if (result.hasPhysicalGame() &&
            result.physicalGame_ != proto.response.ResGame.PhysicalGame.getDefaultInstance()) {
          result.physicalGame_ =
            proto.response.ResGame.PhysicalGame.newBuilder(result.physicalGame_).mergeFrom(value).buildPartial();
        } else {
          result.physicalGame_ = value;
        }
        result.hasPhysicalGame = true;
        return this;
      }
      public Builder clearPhysicalGame() {
        result.hasPhysicalGame = false;
        result.physicalGame_ = proto.response.ResGame.PhysicalGame.getDefaultInstance();
        return this;
      }
      
      // repeated .Map required_maps = 4;
      public java.util.List<proto.response.ResGame.Map> getRequiredMapsList() {
        return java.util.Collections.unmodifiableList(result.requiredMaps_);
      }
      public int getRequiredMapsCount() {
        return result.getRequiredMapsCount();
      }
      public proto.response.ResGame.Map getRequiredMaps(int index) {
        return result.getRequiredMaps(index);
      }
      public Builder setRequiredMaps(int index, proto.response.ResGame.Map value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.requiredMaps_.set(index, value);
        return this;
      }
      public Builder setRequiredMaps(int index, proto.response.ResGame.Map.Builder builderForValue) {
        result.requiredMaps_.set(index, builderForValue.build());
        return this;
      }
      public Builder addRequiredMaps(proto.response.ResGame.Map value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.requiredMaps_.isEmpty()) {
          result.requiredMaps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        result.requiredMaps_.add(value);
        return this;
      }
      public Builder addRequiredMaps(proto.response.ResGame.Map.Builder builderForValue) {
        if (result.requiredMaps_.isEmpty()) {
          result.requiredMaps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        result.requiredMaps_.add(builderForValue.build());
        return this;
      }
      public Builder addAllRequiredMaps(
          java.lang.Iterable<? extends proto.response.ResGame.Map> values) {
        if (result.requiredMaps_.isEmpty()) {
          result.requiredMaps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        super.addAll(values, result.requiredMaps_);
        return this;
      }
      public Builder clearRequiredMaps() {
        result.requiredMaps_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .Map optional_maps = 5;
      public java.util.List<proto.response.ResGame.Map> getOptionalMapsList() {
        return java.util.Collections.unmodifiableList(result.optionalMaps_);
      }
      public int getOptionalMapsCount() {
        return result.getOptionalMapsCount();
      }
      public proto.response.ResGame.Map getOptionalMaps(int index) {
        return result.getOptionalMaps(index);
      }
      public Builder setOptionalMaps(int index, proto.response.ResGame.Map value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.optionalMaps_.set(index, value);
        return this;
      }
      public Builder setOptionalMaps(int index, proto.response.ResGame.Map.Builder builderForValue) {
        result.optionalMaps_.set(index, builderForValue.build());
        return this;
      }
      public Builder addOptionalMaps(proto.response.ResGame.Map value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.optionalMaps_.isEmpty()) {
          result.optionalMaps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        result.optionalMaps_.add(value);
        return this;
      }
      public Builder addOptionalMaps(proto.response.ResGame.Map.Builder builderForValue) {
        if (result.optionalMaps_.isEmpty()) {
          result.optionalMaps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        result.optionalMaps_.add(builderForValue.build());
        return this;
      }
      public Builder addAllOptionalMaps(
          java.lang.Iterable<? extends proto.response.ResGame.Map> values) {
        if (result.optionalMaps_.isEmpty()) {
          result.optionalMaps_ = new java.util.ArrayList<proto.response.ResGame.Map>();
        }
        super.addAll(values, result.optionalMaps_);
        return this;
      }
      public Builder clearOptionalMaps() {
        result.optionalMaps_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:EventGet)
    }
    
    static {
      defaultInstance = new EventGet(true);
      proto.response.ResGame.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:EventGet)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogicalGame_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_LogicalGameList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_LogicalGameList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PhysicalGame_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PhysicalGame_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PhysicalGameList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PhysicalGameList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PhysicalGameVersion_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PhysicalGameVersion_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_Map_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Map_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_MapList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_MapList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_EventGet_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_EventGet_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016res_game.proto\032\022res_listbase.proto\"6\n\013" +
      "LogicalGame\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022\r\n" +
      "\005modes\030\003 \003(\t\"5\n\017LogicalGameList\022\"\n\014logic" +
      "alGames\030\001 \003(\0132\014.LogicalGame\"w\n\014PhysicalG" +
      "ame\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\t\022&\n\010version" +
      "s\030\003 \003(\0132\024.PhysicalGameVersion\022%\n\007version" +
      "\030\004 \001(\0132\024.PhysicalGameVersion\"8\n\020Physical" +
      "GameList\022$\n\rphysicalGames\030\001 \003(\0132\r.Physic" +
      "alGame\"R\n\023PhysicalGameVersion\022\014\n\004code\030\001 " +
      "\001(\t\022\017\n\007display\030\002 \001(\t\022\014\n\004file\030\003 \001(\t\022\016\n\006di",
      "gest\030\004 \001(\t\"\265\001\n\003Map\022\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002" +
      " \001(\t\022\017\n\007version\030\003 \001(\t\022\026\n\016physicalGameID\030" +
      "\004 \001(\r\022 \n\030physicalGameVersionLimit\030\005 \001(\t\022" +
      "\016\n\006digest\030\006 \001(\t\022\024\n\014downloadLink\030\007 \001(\t\022\020\n" +
      "\010fileSize\030\010 \001(\r\022\021\n\tthumbnail\030\t \001(\t\":\n\007Ma" +
      "pList\022\022\n\004maps\030\001 \003(\0132\004.Map\022\033\n\006params\030\002 \001(" +
      "\0132\013.ListParams\"\204\001\n\010EventGet\022\n\n\002id\030\001 \001(\r\022" +
      "\014\n\004name\030\002 \001(\t\022$\n\rphysical_game\030\003 \001(\0132\r.P" +
      "hysicalGame\022\033\n\rrequired_maps\030\004 \003(\0132\004.Map" +
      "\022\033\n\roptional_maps\030\005 \003(\0132\004.MapB\022\n\016proto.r",
      "esponseH\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_LogicalGame_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_LogicalGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LogicalGame_descriptor,
              new java.lang.String[] { "Id", "Name", "Modes", },
              proto.response.ResGame.LogicalGame.class,
              proto.response.ResGame.LogicalGame.Builder.class);
          internal_static_LogicalGameList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_LogicalGameList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_LogicalGameList_descriptor,
              new java.lang.String[] { "LogicalGames", },
              proto.response.ResGame.LogicalGameList.class,
              proto.response.ResGame.LogicalGameList.Builder.class);
          internal_static_PhysicalGame_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_PhysicalGame_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PhysicalGame_descriptor,
              new java.lang.String[] { "Id", "Name", "Versions", "Version", },
              proto.response.ResGame.PhysicalGame.class,
              proto.response.ResGame.PhysicalGame.Builder.class);
          internal_static_PhysicalGameList_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_PhysicalGameList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PhysicalGameList_descriptor,
              new java.lang.String[] { "PhysicalGames", },
              proto.response.ResGame.PhysicalGameList.class,
              proto.response.ResGame.PhysicalGameList.Builder.class);
          internal_static_PhysicalGameVersion_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_PhysicalGameVersion_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PhysicalGameVersion_descriptor,
              new java.lang.String[] { "Code", "Display", "File", "Digest", },
              proto.response.ResGame.PhysicalGameVersion.class,
              proto.response.ResGame.PhysicalGameVersion.Builder.class);
          internal_static_Map_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_Map_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_Map_descriptor,
              new java.lang.String[] { "Id", "Name", "Version", "PhysicalGameID", "PhysicalGameVersionLimit", "Digest", "DownloadLink", "FileSize", "Thumbnail", },
              proto.response.ResGame.Map.class,
              proto.response.ResGame.Map.Builder.class);
          internal_static_MapList_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_MapList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_MapList_descriptor,
              new java.lang.String[] { "Maps", "Params", },
              proto.response.ResGame.MapList.class,
              proto.response.ResGame.MapList.Builder.class);
          internal_static_EventGet_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_EventGet_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_EventGet_descriptor,
              new java.lang.String[] { "Id", "Name", "PhysicalGame", "RequiredMaps", "OptionalMaps", },
              proto.response.ResGame.EventGet.class,
              proto.response.ResGame.EventGet.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.response.ResListbase.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
