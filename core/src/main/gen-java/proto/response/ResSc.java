// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: res_sc.proto

package proto.response;

public final class ResSc {
  private ResSc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class StarCraftData extends
      com.google.protobuf.GeneratedMessage {
    // Use StarCraftData.newBuilder() to construct.
    private StarCraftData() {
      initFields();
    }
    private StarCraftData(boolean noInit) {}
    
    private static final StarCraftData defaultInstance;
    public static StarCraftData getDefaultInstance() {
      return defaultInstance;
    }
    
    public StarCraftData getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.response.ResSc.internal_static_StarCraftData_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.response.ResSc.internal_static_StarCraftData_fieldAccessorTable;
    }
    
    public static final class Header extends
        com.google.protobuf.GeneratedMessage {
      // Use Header.newBuilder() to construct.
      private Header() {
        initFields();
      }
      private Header(boolean noInit) {}
      
      private static final Header defaultInstance;
      public static Header getDefaultInstance() {
        return defaultInstance;
      }
      
      public Header getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.response.ResSc.internal_static_StarCraftData_Header_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.response.ResSc.internal_static_StarCraftData_Header_fieldAccessorTable;
      }
      
      // required string version = 1;
      public static final int VERSION_FIELD_NUMBER = 1;
      private boolean hasVersion;
      private java.lang.String version_ = "";
      public boolean hasVersion() { return hasVersion; }
      public java.lang.String getVersion() { return version_; }
      
      // required string messageType = 2;
      public static final int MESSAGETYPE_FIELD_NUMBER = 2;
      private boolean hasMessageType;
      private java.lang.String messageType_ = "";
      public boolean hasMessageType() { return hasMessageType; }
      public java.lang.String getMessageType() { return messageType_; }
      
      // optional string battleType = 3;
      public static final int BATTLETYPE_FIELD_NUMBER = 3;
      private boolean hasBattleType;
      private java.lang.String battleType_ = "";
      public boolean hasBattleType() { return hasBattleType; }
      public java.lang.String getBattleType() { return battleType_; }
      
      // required uint32 time = 4;
      public static final int TIME_FIELD_NUMBER = 4;
      private boolean hasTime;
      private int time_ = 0;
      public boolean hasTime() { return hasTime; }
      public int getTime() { return time_; }
      
      // required uint32 userIDOfSender = 5;
      public static final int USERIDOFSENDER_FIELD_NUMBER = 5;
      private boolean hasUserIDOfSender;
      private int userIDOfSender_ = 0;
      public boolean hasUserIDOfSender() { return hasUserIDOfSender; }
      public int getUserIDOfSender() { return userIDOfSender_; }
      
      private void initFields() {
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.Header parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Header parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(proto.response.ResSc.StarCraftData.Header prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private proto.response.ResSc.StarCraftData.Header result;
        
        // Construct using proto.response.ResSc.StarCraftData.Header.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new proto.response.ResSc.StarCraftData.Header();
          return builder;
        }
        
        protected proto.response.ResSc.StarCraftData.Header internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new proto.response.ResSc.StarCraftData.Header();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.response.ResSc.StarCraftData.Header.getDescriptor();
        }
        
        public proto.response.ResSc.StarCraftData.Header getDefaultInstanceForType() {
          return proto.response.ResSc.StarCraftData.Header.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public proto.response.ResSc.StarCraftData.Header build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private proto.response.ResSc.StarCraftData.Header buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public proto.response.ResSc.StarCraftData.Header buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          proto.response.ResSc.StarCraftData.Header returnMe = result;
          result = null;
          return returnMe;
        }
        
        
        // required string version = 1;
        public boolean hasVersion() {
          return result.hasVersion();
        }
        public java.lang.String getVersion() {
          return result.getVersion();
        }
        public Builder setVersion(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersion = true;
          result.version_ = value;
          return this;
        }
        public Builder clearVersion() {
          result.hasVersion = false;
          result.version_ = getDefaultInstance().getVersion();
          return this;
        }
        
        // required string messageType = 2;
        public boolean hasMessageType() {
          return result.hasMessageType();
        }
        public java.lang.String getMessageType() {
          return result.getMessageType();
        }
        public Builder setMessageType(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasMessageType = true;
          result.messageType_ = value;
          return this;
        }
        public Builder clearMessageType() {
          result.hasMessageType = false;
          result.messageType_ = getDefaultInstance().getMessageType();
          return this;
        }
        
        // optional string battleType = 3;
        public boolean hasBattleType() {
          return result.hasBattleType();
        }
        public java.lang.String getBattleType() {
          return result.getBattleType();
        }
        public Builder setBattleType(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasBattleType = true;
          result.battleType_ = value;
          return this;
        }
        public Builder clearBattleType() {
          result.hasBattleType = false;
          result.battleType_ = getDefaultInstance().getBattleType();
          return this;
        }
        
        // required uint32 time = 4;
        public boolean hasTime() {
          return result.hasTime();
        }
        public int getTime() {
          return result.getTime();
        }
        public Builder setTime(int value) {
          result.hasTime = true;
          result.time_ = value;
          return this;
        }
        public Builder clearTime() {
          result.hasTime = false;
          result.time_ = 0;
          return this;
        }
        
        // required uint32 userIDOfSender = 5;
        public boolean hasUserIDOfSender() {
          return result.hasUserIDOfSender();
        }
        public int getUserIDOfSender() {
          return result.getUserIDOfSender();
        }
        public Builder setUserIDOfSender(int value) {
          result.hasUserIDOfSender = true;
          result.userIDOfSender_ = value;
          return this;
        }
        public Builder clearUserIDOfSender() {
          result.hasUserIDOfSender = false;
          result.userIDOfSender_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:StarCraftData.Header)
      }
      
      static {
        defaultInstance = new Header(true);
        proto.response.ResSc.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:StarCraftData.Header)
    }
    
    public static final class UnitInfo extends
        com.google.protobuf.GeneratedMessage {
      // Use UnitInfo.newBuilder() to construct.
      private UnitInfo() {
        initFields();
      }
      private UnitInfo(boolean noInit) {}
      
      private static final UnitInfo defaultInstance;
      public static UnitInfo getDefaultInstance() {
        return defaultInstance;
      }
      
      public UnitInfo getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.response.ResSc.internal_static_StarCraftData_UnitInfo_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.response.ResSc.internal_static_StarCraftData_UnitInfo_fieldAccessorTable;
      }
      
      // required string stringID = 1;
      public static final int STRINGID_FIELD_NUMBER = 1;
      private boolean hasStringID;
      private java.lang.String stringID_ = "";
      public boolean hasStringID() { return hasStringID; }
      public java.lang.String getStringID() { return stringID_; }
      
      // optional int32 totalBuilt = 2 [default = 0];
      public static final int TOTALBUILT_FIELD_NUMBER = 2;
      private boolean hasTotalBuilt;
      private int totalBuilt_ = 0;
      public boolean hasTotalBuilt() { return hasTotalBuilt; }
      public int getTotalBuilt() { return totalBuilt_; }
      
      // optional int32 nowExist = 3 [default = 0];
      public static final int NOWEXIST_FIELD_NUMBER = 3;
      private boolean hasNowExist;
      private int nowExist_ = 0;
      public boolean hasNowExist() { return hasNowExist; }
      public int getNowExist() { return nowExist_; }
      
      // optional int32 waitForBuilding = 4 [default = 0];
      public static final int WAITFORBUILDING_FIELD_NUMBER = 4;
      private boolean hasWaitForBuilding;
      private int waitForBuilding_ = 0;
      public boolean hasWaitForBuilding() { return hasWaitForBuilding; }
      public int getWaitForBuilding() { return waitForBuilding_; }
      
      // optional int32 isBuilding = 5;
      public static final int ISBUILDING_FIELD_NUMBER = 5;
      private boolean hasIsBuilding;
      private int isBuilding_ = 0;
      public boolean hasIsBuilding() { return hasIsBuilding; }
      public int getIsBuilding() { return isBuilding_; }
      
      // optional string name = 6;
      public static final int NAME_FIELD_NUMBER = 6;
      private boolean hasName;
      private java.lang.String name_ = "";
      public boolean hasName() { return hasName; }
      public java.lang.String getName() { return name_; }
      
      private void initFields() {
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.UnitInfo parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(proto.response.ResSc.StarCraftData.UnitInfo prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private proto.response.ResSc.StarCraftData.UnitInfo result;
        
        // Construct using proto.response.ResSc.StarCraftData.UnitInfo.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new proto.response.ResSc.StarCraftData.UnitInfo();
          return builder;
        }
        
        protected proto.response.ResSc.StarCraftData.UnitInfo internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new proto.response.ResSc.StarCraftData.UnitInfo();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.response.ResSc.StarCraftData.UnitInfo.getDescriptor();
        }
        
        public proto.response.ResSc.StarCraftData.UnitInfo getDefaultInstanceForType() {
          return proto.response.ResSc.StarCraftData.UnitInfo.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public proto.response.ResSc.StarCraftData.UnitInfo build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private proto.response.ResSc.StarCraftData.UnitInfo buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public proto.response.ResSc.StarCraftData.UnitInfo buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          proto.response.ResSc.StarCraftData.UnitInfo returnMe = result;
          result = null;
          return returnMe;
        }
        
        
        // required string stringID = 1;
        public boolean hasStringID() {
          return result.hasStringID();
        }
        public java.lang.String getStringID() {
          return result.getStringID();
        }
        public Builder setStringID(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringID = true;
          result.stringID_ = value;
          return this;
        }
        public Builder clearStringID() {
          result.hasStringID = false;
          result.stringID_ = getDefaultInstance().getStringID();
          return this;
        }
        
        // optional int32 totalBuilt = 2 [default = 0];
        public boolean hasTotalBuilt() {
          return result.hasTotalBuilt();
        }
        public int getTotalBuilt() {
          return result.getTotalBuilt();
        }
        public Builder setTotalBuilt(int value) {
          result.hasTotalBuilt = true;
          result.totalBuilt_ = value;
          return this;
        }
        public Builder clearTotalBuilt() {
          result.hasTotalBuilt = false;
          result.totalBuilt_ = 0;
          return this;
        }
        
        // optional int32 nowExist = 3 [default = 0];
        public boolean hasNowExist() {
          return result.hasNowExist();
        }
        public int getNowExist() {
          return result.getNowExist();
        }
        public Builder setNowExist(int value) {
          result.hasNowExist = true;
          result.nowExist_ = value;
          return this;
        }
        public Builder clearNowExist() {
          result.hasNowExist = false;
          result.nowExist_ = 0;
          return this;
        }
        
        // optional int32 waitForBuilding = 4 [default = 0];
        public boolean hasWaitForBuilding() {
          return result.hasWaitForBuilding();
        }
        public int getWaitForBuilding() {
          return result.getWaitForBuilding();
        }
        public Builder setWaitForBuilding(int value) {
          result.hasWaitForBuilding = true;
          result.waitForBuilding_ = value;
          return this;
        }
        public Builder clearWaitForBuilding() {
          result.hasWaitForBuilding = false;
          result.waitForBuilding_ = 0;
          return this;
        }
        
        // optional int32 isBuilding = 5;
        public boolean hasIsBuilding() {
          return result.hasIsBuilding();
        }
        public int getIsBuilding() {
          return result.getIsBuilding();
        }
        public Builder setIsBuilding(int value) {
          result.hasIsBuilding = true;
          result.isBuilding_ = value;
          return this;
        }
        public Builder clearIsBuilding() {
          result.hasIsBuilding = false;
          result.isBuilding_ = 0;
          return this;
        }
        
        // optional string name = 6;
        public boolean hasName() {
          return result.hasName();
        }
        public java.lang.String getName() {
          return result.getName();
        }
        public Builder setName(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
          result.name_ = value;
          return this;
        }
        public Builder clearName() {
          result.hasName = false;
          result.name_ = getDefaultInstance().getName();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:StarCraftData.UnitInfo)
      }
      
      static {
        defaultInstance = new UnitInfo(true);
        proto.response.ResSc.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:StarCraftData.UnitInfo)
    }
    
    public static final class Player extends
        com.google.protobuf.GeneratedMessage {
      // Use Player.newBuilder() to construct.
      private Player() {
        initFields();
      }
      private Player(boolean noInit) {}
      
      private static final Player defaultInstance;
      public static Player getDefaultInstance() {
        return defaultInstance;
      }
      
      public Player getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.response.ResSc.internal_static_StarCraftData_Player_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.response.ResSc.internal_static_StarCraftData_Player_fieldAccessorTable;
      }
      
      // required uint32 userID = 1;
      public static final int USERID_FIELD_NUMBER = 1;
      private boolean hasUserID;
      private int userID_ = 0;
      public boolean hasUserID() { return hasUserID; }
      public int getUserID() { return userID_; }
      
      // optional string result = 2;
      public static final int RESULT_FIELD_NUMBER = 2;
      private boolean hasResult;
      private java.lang.String result_ = "";
      public boolean hasResult() { return hasResult; }
      public java.lang.String getResult() { return result_; }
      
      // optional uint32 totalScore = 3;
      public static final int TOTALSCORE_FIELD_NUMBER = 3;
      private boolean hasTotalScore;
      private int totalScore_ = 0;
      public boolean hasTotalScore() { return hasTotalScore; }
      public int getTotalScore() { return totalScore_; }
      
      // optional uint32 unitScore = 4;
      public static final int UNITSCORE_FIELD_NUMBER = 4;
      private boolean hasUnitScore;
      private int unitScore_ = 0;
      public boolean hasUnitScore() { return hasUnitScore; }
      public int getUnitScore() { return unitScore_; }
      
      // optional uint32 buildScore = 5;
      public static final int BUILDSCORE_FIELD_NUMBER = 5;
      private boolean hasBuildScore;
      private int buildScore_ = 0;
      public boolean hasBuildScore() { return hasBuildScore; }
      public int getBuildScore() { return buildScore_; }
      
      // optional uint32 sourceScore = 6;
      public static final int SOURCESCORE_FIELD_NUMBER = 6;
      private boolean hasSourceScore;
      private int sourceScore_ = 0;
      public boolean hasSourceScore() { return hasSourceScore; }
      public int getSourceScore() { return sourceScore_; }
      
      // optional uint32 nowMineral = 7;
      public static final int NOWMINERAL_FIELD_NUMBER = 7;
      private boolean hasNowMineral;
      private int nowMineral_ = 0;
      public boolean hasNowMineral() { return hasNowMineral; }
      public int getNowMineral() { return nowMineral_; }
      
      // optional uint32 nowGas = 8;
      public static final int NOWGAS_FIELD_NUMBER = 8;
      private boolean hasNowGas;
      private int nowGas_ = 0;
      public boolean hasNowGas() { return hasNowGas; }
      public int getNowGas() { return nowGas_; }
      
      // optional uint32 allMineral = 9;
      public static final int ALLMINERAL_FIELD_NUMBER = 9;
      private boolean hasAllMineral;
      private int allMineral_ = 0;
      public boolean hasAllMineral() { return hasAllMineral; }
      public int getAllMineral() { return allMineral_; }
      
      // optional uint32 allGas = 10;
      public static final int ALLGAS_FIELD_NUMBER = 10;
      private boolean hasAllGas;
      private int allGas_ = 0;
      public boolean hasAllGas() { return hasAllGas; }
      public int getAllGas() { return allGas_; }
      
      // optional uint32 numAllProduce = 11;
      public static final int NUMALLPRODUCE_FIELD_NUMBER = 11;
      private boolean hasNumAllProduce;
      private int numAllProduce_ = 0;
      public boolean hasNumAllProduce() { return hasNumAllProduce; }
      public int getNumAllProduce() { return numAllProduce_; }
      
      // optional uint32 numAllUnitLost = 12;
      public static final int NUMALLUNITLOST_FIELD_NUMBER = 12;
      private boolean hasNumAllUnitLost;
      private int numAllUnitLost_ = 0;
      public boolean hasNumAllUnitLost() { return hasNumAllUnitLost; }
      public int getNumAllUnitLost() { return numAllUnitLost_; }
      
      // optional uint32 numAllKill = 13;
      public static final int NUMALLKILL_FIELD_NUMBER = 13;
      private boolean hasNumAllKill;
      private int numAllKill_ = 0;
      public boolean hasNumAllKill() { return hasNumAllKill; }
      public int getNumAllKill() { return numAllKill_; }
      
      // optional uint32 numAllBuild = 14;
      public static final int NUMALLBUILD_FIELD_NUMBER = 14;
      private boolean hasNumAllBuild;
      private int numAllBuild_ = 0;
      public boolean hasNumAllBuild() { return hasNumAllBuild; }
      public int getNumAllBuild() { return numAllBuild_; }
      
      // optional uint32 numAllDestroy = 15;
      public static final int NUMALLDESTROY_FIELD_NUMBER = 15;
      private boolean hasNumAllDestroy;
      private int numAllDestroy_ = 0;
      public boolean hasNumAllDestroy() { return hasNumAllDestroy; }
      public int getNumAllDestroy() { return numAllDestroy_; }
      
      // optional uint32 numAllBuildingLost = 16;
      public static final int NUMALLBUILDINGLOST_FIELD_NUMBER = 16;
      private boolean hasNumAllBuildingLost;
      private int numAllBuildingLost_ = 0;
      public boolean hasNumAllBuildingLost() { return hasNumAllBuildingLost; }
      public int getNumAllBuildingLost() { return numAllBuildingLost_; }
      
      // optional float APM = 17 [default = 0];
      public static final int APM_FIELD_NUMBER = 17;
      private boolean hasAPM;
      private float aPM_ = 0F;
      public boolean hasAPM() { return hasAPM; }
      public float getAPM() { return aPM_; }
      
      // optional string race = 18;
      public static final int RACE_FIELD_NUMBER = 18;
      private boolean hasRace;
      private java.lang.String race_ = "";
      public boolean hasRace() { return hasRace; }
      public java.lang.String getRace() { return race_; }
      
      // optional int32 leaveTime = 19;
      public static final int LEAVETIME_FIELD_NUMBER = 19;
      private boolean hasLeaveTime;
      private int leaveTime_ = 0;
      public boolean hasLeaveTime() { return hasLeaveTime; }
      public int getLeaveTime() { return leaveTime_; }
      
      // optional string isLeave = 20;
      public static final int ISLEAVE_FIELD_NUMBER = 20;
      private boolean hasIsLeave;
      private java.lang.String isLeave_ = "";
      public boolean hasIsLeave() { return hasIsLeave; }
      public java.lang.String getIsLeave() { return isLeave_; }
      
      // repeated .StarCraftData.UnitInfo units = 21;
      public static final int UNITS_FIELD_NUMBER = 21;
      private java.util.List<proto.response.ResSc.StarCraftData.UnitInfo> units_ =
        java.util.Collections.emptyList();
      public java.util.List<proto.response.ResSc.StarCraftData.UnitInfo> getUnitsList() {
        return units_;
      }
      public int getUnitsCount() { return units_.size(); }
      public proto.response.ResSc.StarCraftData.UnitInfo getUnits(int index) {
        return units_.get(index);
      }
      
      // optional .UserModel user = 22;
      public static final int USER_FIELD_NUMBER = 22;
      private boolean hasUser;
      private proto.response.ResUser.UserModel user_;
      public boolean hasUser() { return hasUser; }
      public proto.response.ResUser.UserModel getUser() { return user_; }
      
      // optional int32 force = 23;
      public static final int FORCE_FIELD_NUMBER = 23;
      private boolean hasForce;
      private int force_ = 0;
      public boolean hasForce() { return hasForce; }
      public int getForce() { return force_; }
      
      private void initFields() {
        user_ = proto.response.ResUser.UserModel.getDefaultInstance();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.Player parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.Player parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(proto.response.ResSc.StarCraftData.Player prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private proto.response.ResSc.StarCraftData.Player result;
        
        // Construct using proto.response.ResSc.StarCraftData.Player.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new proto.response.ResSc.StarCraftData.Player();
          return builder;
        }
        
        protected proto.response.ResSc.StarCraftData.Player internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new proto.response.ResSc.StarCraftData.Player();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.response.ResSc.StarCraftData.Player.getDescriptor();
        }
        
        public proto.response.ResSc.StarCraftData.Player getDefaultInstanceForType() {
          return proto.response.ResSc.StarCraftData.Player.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public proto.response.ResSc.StarCraftData.Player build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private proto.response.ResSc.StarCraftData.Player buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public proto.response.ResSc.StarCraftData.Player buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          if (result.units_ != java.util.Collections.EMPTY_LIST) {
            result.units_ =
              java.util.Collections.unmodifiableList(result.units_);
          }
          proto.response.ResSc.StarCraftData.Player returnMe = result;
          result = null;
          return returnMe;
        }
        
        
        // required uint32 userID = 1;
        public boolean hasUserID() {
          return result.hasUserID();
        }
        public int getUserID() {
          return result.getUserID();
        }
        public Builder setUserID(int value) {
          result.hasUserID = true;
          result.userID_ = value;
          return this;
        }
        public Builder clearUserID() {
          result.hasUserID = false;
          result.userID_ = 0;
          return this;
        }
        
        // optional string result = 2;
        public boolean hasResult() {
          return result.hasResult();
        }
        public java.lang.String getResult() {
          return result.getResult();
        }
        public Builder setResult(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasResult = true;
          result.result_ = value;
          return this;
        }
        public Builder clearResult() {
          result.hasResult = false;
          result.result_ = getDefaultInstance().getResult();
          return this;
        }
        
        // optional uint32 totalScore = 3;
        public boolean hasTotalScore() {
          return result.hasTotalScore();
        }
        public int getTotalScore() {
          return result.getTotalScore();
        }
        public Builder setTotalScore(int value) {
          result.hasTotalScore = true;
          result.totalScore_ = value;
          return this;
        }
        public Builder clearTotalScore() {
          result.hasTotalScore = false;
          result.totalScore_ = 0;
          return this;
        }
        
        // optional uint32 unitScore = 4;
        public boolean hasUnitScore() {
          return result.hasUnitScore();
        }
        public int getUnitScore() {
          return result.getUnitScore();
        }
        public Builder setUnitScore(int value) {
          result.hasUnitScore = true;
          result.unitScore_ = value;
          return this;
        }
        public Builder clearUnitScore() {
          result.hasUnitScore = false;
          result.unitScore_ = 0;
          return this;
        }
        
        // optional uint32 buildScore = 5;
        public boolean hasBuildScore() {
          return result.hasBuildScore();
        }
        public int getBuildScore() {
          return result.getBuildScore();
        }
        public Builder setBuildScore(int value) {
          result.hasBuildScore = true;
          result.buildScore_ = value;
          return this;
        }
        public Builder clearBuildScore() {
          result.hasBuildScore = false;
          result.buildScore_ = 0;
          return this;
        }
        
        // optional uint32 sourceScore = 6;
        public boolean hasSourceScore() {
          return result.hasSourceScore();
        }
        public int getSourceScore() {
          return result.getSourceScore();
        }
        public Builder setSourceScore(int value) {
          result.hasSourceScore = true;
          result.sourceScore_ = value;
          return this;
        }
        public Builder clearSourceScore() {
          result.hasSourceScore = false;
          result.sourceScore_ = 0;
          return this;
        }
        
        // optional uint32 nowMineral = 7;
        public boolean hasNowMineral() {
          return result.hasNowMineral();
        }
        public int getNowMineral() {
          return result.getNowMineral();
        }
        public Builder setNowMineral(int value) {
          result.hasNowMineral = true;
          result.nowMineral_ = value;
          return this;
        }
        public Builder clearNowMineral() {
          result.hasNowMineral = false;
          result.nowMineral_ = 0;
          return this;
        }
        
        // optional uint32 nowGas = 8;
        public boolean hasNowGas() {
          return result.hasNowGas();
        }
        public int getNowGas() {
          return result.getNowGas();
        }
        public Builder setNowGas(int value) {
          result.hasNowGas = true;
          result.nowGas_ = value;
          return this;
        }
        public Builder clearNowGas() {
          result.hasNowGas = false;
          result.nowGas_ = 0;
          return this;
        }
        
        // optional uint32 allMineral = 9;
        public boolean hasAllMineral() {
          return result.hasAllMineral();
        }
        public int getAllMineral() {
          return result.getAllMineral();
        }
        public Builder setAllMineral(int value) {
          result.hasAllMineral = true;
          result.allMineral_ = value;
          return this;
        }
        public Builder clearAllMineral() {
          result.hasAllMineral = false;
          result.allMineral_ = 0;
          return this;
        }
        
        // optional uint32 allGas = 10;
        public boolean hasAllGas() {
          return result.hasAllGas();
        }
        public int getAllGas() {
          return result.getAllGas();
        }
        public Builder setAllGas(int value) {
          result.hasAllGas = true;
          result.allGas_ = value;
          return this;
        }
        public Builder clearAllGas() {
          result.hasAllGas = false;
          result.allGas_ = 0;
          return this;
        }
        
        // optional uint32 numAllProduce = 11;
        public boolean hasNumAllProduce() {
          return result.hasNumAllProduce();
        }
        public int getNumAllProduce() {
          return result.getNumAllProduce();
        }
        public Builder setNumAllProduce(int value) {
          result.hasNumAllProduce = true;
          result.numAllProduce_ = value;
          return this;
        }
        public Builder clearNumAllProduce() {
          result.hasNumAllProduce = false;
          result.numAllProduce_ = 0;
          return this;
        }
        
        // optional uint32 numAllUnitLost = 12;
        public boolean hasNumAllUnitLost() {
          return result.hasNumAllUnitLost();
        }
        public int getNumAllUnitLost() {
          return result.getNumAllUnitLost();
        }
        public Builder setNumAllUnitLost(int value) {
          result.hasNumAllUnitLost = true;
          result.numAllUnitLost_ = value;
          return this;
        }
        public Builder clearNumAllUnitLost() {
          result.hasNumAllUnitLost = false;
          result.numAllUnitLost_ = 0;
          return this;
        }
        
        // optional uint32 numAllKill = 13;
        public boolean hasNumAllKill() {
          return result.hasNumAllKill();
        }
        public int getNumAllKill() {
          return result.getNumAllKill();
        }
        public Builder setNumAllKill(int value) {
          result.hasNumAllKill = true;
          result.numAllKill_ = value;
          return this;
        }
        public Builder clearNumAllKill() {
          result.hasNumAllKill = false;
          result.numAllKill_ = 0;
          return this;
        }
        
        // optional uint32 numAllBuild = 14;
        public boolean hasNumAllBuild() {
          return result.hasNumAllBuild();
        }
        public int getNumAllBuild() {
          return result.getNumAllBuild();
        }
        public Builder setNumAllBuild(int value) {
          result.hasNumAllBuild = true;
          result.numAllBuild_ = value;
          return this;
        }
        public Builder clearNumAllBuild() {
          result.hasNumAllBuild = false;
          result.numAllBuild_ = 0;
          return this;
        }
        
        // optional uint32 numAllDestroy = 15;
        public boolean hasNumAllDestroy() {
          return result.hasNumAllDestroy();
        }
        public int getNumAllDestroy() {
          return result.getNumAllDestroy();
        }
        public Builder setNumAllDestroy(int value) {
          result.hasNumAllDestroy = true;
          result.numAllDestroy_ = value;
          return this;
        }
        public Builder clearNumAllDestroy() {
          result.hasNumAllDestroy = false;
          result.numAllDestroy_ = 0;
          return this;
        }
        
        // optional uint32 numAllBuildingLost = 16;
        public boolean hasNumAllBuildingLost() {
          return result.hasNumAllBuildingLost();
        }
        public int getNumAllBuildingLost() {
          return result.getNumAllBuildingLost();
        }
        public Builder setNumAllBuildingLost(int value) {
          result.hasNumAllBuildingLost = true;
          result.numAllBuildingLost_ = value;
          return this;
        }
        public Builder clearNumAllBuildingLost() {
          result.hasNumAllBuildingLost = false;
          result.numAllBuildingLost_ = 0;
          return this;
        }
        
        // optional float APM = 17 [default = 0];
        public boolean hasAPM() {
          return result.hasAPM();
        }
        public float getAPM() {
          return result.getAPM();
        }
        public Builder setAPM(float value) {
          result.hasAPM = true;
          result.aPM_ = value;
          return this;
        }
        public Builder clearAPM() {
          result.hasAPM = false;
          result.aPM_ = 0F;
          return this;
        }
        
        // optional string race = 18;
        public boolean hasRace() {
          return result.hasRace();
        }
        public java.lang.String getRace() {
          return result.getRace();
        }
        public Builder setRace(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasRace = true;
          result.race_ = value;
          return this;
        }
        public Builder clearRace() {
          result.hasRace = false;
          result.race_ = getDefaultInstance().getRace();
          return this;
        }
        
        // optional int32 leaveTime = 19;
        public boolean hasLeaveTime() {
          return result.hasLeaveTime();
        }
        public int getLeaveTime() {
          return result.getLeaveTime();
        }
        public Builder setLeaveTime(int value) {
          result.hasLeaveTime = true;
          result.leaveTime_ = value;
          return this;
        }
        public Builder clearLeaveTime() {
          result.hasLeaveTime = false;
          result.leaveTime_ = 0;
          return this;
        }
        
        // optional string isLeave = 20;
        public boolean hasIsLeave() {
          return result.hasIsLeave();
        }
        public java.lang.String getIsLeave() {
          return result.getIsLeave();
        }
        public Builder setIsLeave(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasIsLeave = true;
          result.isLeave_ = value;
          return this;
        }
        public Builder clearIsLeave() {
          result.hasIsLeave = false;
          result.isLeave_ = getDefaultInstance().getIsLeave();
          return this;
        }
        
        // repeated .StarCraftData.UnitInfo units = 21;
        public java.util.List<proto.response.ResSc.StarCraftData.UnitInfo> getUnitsList() {
          return java.util.Collections.unmodifiableList(result.units_);
        }
        public int getUnitsCount() {
          return result.getUnitsCount();
        }
        public proto.response.ResSc.StarCraftData.UnitInfo getUnits(int index) {
          return result.getUnits(index);
        }
        public Builder setUnits(int index, proto.response.ResSc.StarCraftData.UnitInfo value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.units_.set(index, value);
          return this;
        }
        public Builder setUnits(int index, proto.response.ResSc.StarCraftData.UnitInfo.Builder builderForValue) {
          result.units_.set(index, builderForValue.build());
          return this;
        }
        public Builder addUnits(proto.response.ResSc.StarCraftData.UnitInfo value) {
          if (value == null) {
            throw new NullPointerException();
          }
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.UnitInfo>();
          }
          result.units_.add(value);
          return this;
        }
        public Builder addUnits(proto.response.ResSc.StarCraftData.UnitInfo.Builder builderForValue) {
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.UnitInfo>();
          }
          result.units_.add(builderForValue.build());
          return this;
        }
        public Builder addAllUnits(
            java.lang.Iterable<? extends proto.response.ResSc.StarCraftData.UnitInfo> values) {
          if (result.units_.isEmpty()) {
            result.units_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.UnitInfo>();
          }
          super.addAll(values, result.units_);
          return this;
        }
        public Builder clearUnits() {
          result.units_ = java.util.Collections.emptyList();
          return this;
        }
        
        // optional .UserModel user = 22;
        public boolean hasUser() {
          return result.hasUser();
        }
        public proto.response.ResUser.UserModel getUser() {
          return result.getUser();
        }
        public Builder setUser(proto.response.ResUser.UserModel value) {
          if (value == null) {
            throw new NullPointerException();
          }
          result.hasUser = true;
          result.user_ = value;
          return this;
        }
        public Builder setUser(proto.response.ResUser.UserModel.Builder builderForValue) {
          result.hasUser = true;
          result.user_ = builderForValue.build();
          return this;
        }
        public Builder mergeUser(proto.response.ResUser.UserModel value) {
          if (result.hasUser() &&
              result.user_ != proto.response.ResUser.UserModel.getDefaultInstance()) {
            result.user_ =
              proto.response.ResUser.UserModel.newBuilder(result.user_).mergeFrom(value).buildPartial();
          } else {
            result.user_ = value;
          }
          result.hasUser = true;
          return this;
        }
        public Builder clearUser() {
          result.hasUser = false;
          result.user_ = proto.response.ResUser.UserModel.getDefaultInstance();
          return this;
        }
        
        // optional int32 force = 23;
        public boolean hasForce() {
          return result.hasForce();
        }
        public int getForce() {
          return result.getForce();
        }
        public Builder setForce(int value) {
          result.hasForce = true;
          result.force_ = value;
          return this;
        }
        public Builder clearForce() {
          result.hasForce = false;
          result.force_ = 0;
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:StarCraftData.Player)
      }
      
      static {
        defaultInstance = new Player(true);
        proto.response.ResSc.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:StarCraftData.Player)
    }
    
    public static final class SCLeave extends
        com.google.protobuf.GeneratedMessage {
      // Use SCLeave.newBuilder() to construct.
      private SCLeave() {
        initFields();
      }
      private SCLeave(boolean noInit) {}
      
      private static final SCLeave defaultInstance;
      public static SCLeave getDefaultInstance() {
        return defaultInstance;
      }
      
      public SCLeave getDefaultInstanceForType() {
        return defaultInstance;
      }
      
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.response.ResSc.internal_static_StarCraftData_SCLeave_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.response.ResSc.internal_static_StarCraftData_SCLeave_fieldAccessorTable;
      }
      
      // required uint32 userID = 1;
      public static final int USERID_FIELD_NUMBER = 1;
      private boolean hasUserID;
      private int userID_ = 0;
      public boolean hasUserID() { return hasUserID; }
      public int getUserID() { return userID_; }
      
      // optional string leaveReason = 2;
      public static final int LEAVEREASON_FIELD_NUMBER = 2;
      private boolean hasLeaveReason;
      private java.lang.String leaveReason_ = "";
      public boolean hasLeaveReason() { return hasLeaveReason; }
      public java.lang.String getLeaveReason() { return leaveReason_; }
      
      private void initFields() {
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return newBuilder().mergeFrom(data, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Builder builder = newBuilder();
        if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
          return builder.buildParsed();
        } else {
          return null;
        }
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input).buildParsed();
      }
      public static proto.response.ResSc.StarCraftData.SCLeave parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return newBuilder().mergeFrom(input, extensionRegistry)
                 .buildParsed();
      }
      
      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(proto.response.ResSc.StarCraftData.SCLeave prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }
      
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> {
        private proto.response.ResSc.StarCraftData.SCLeave result;
        
        // Construct using proto.response.ResSc.StarCraftData.SCLeave.newBuilder()
        private Builder() {}
        
        private static Builder create() {
          Builder builder = new Builder();
          builder.result = new proto.response.ResSc.StarCraftData.SCLeave();
          return builder;
        }
        
        protected proto.response.ResSc.StarCraftData.SCLeave internalGetResult() {
          return result;
        }
        
        public Builder clear() {
          if (result == null) {
            throw new IllegalStateException(
              "Cannot call clear() after build().");
          }
          result = new proto.response.ResSc.StarCraftData.SCLeave();
          return this;
        }
        
        public Builder clone() {
          return create().mergeFrom(result);
        }
        
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.response.ResSc.StarCraftData.SCLeave.getDescriptor();
        }
        
        public proto.response.ResSc.StarCraftData.SCLeave getDefaultInstanceForType() {
          return proto.response.ResSc.StarCraftData.SCLeave.getDefaultInstance();
        }
        
        public boolean isInitialized() {
          return result.isInitialized();
        }
        public proto.response.ResSc.StarCraftData.SCLeave build() {
          if (result != null && !isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return buildPartial();
        }
        
        private proto.response.ResSc.StarCraftData.SCLeave buildParsed()
            throws com.google.protobuf.InvalidProtocolBufferException {
          if (!isInitialized()) {
            throw newUninitializedMessageException(
              result).asInvalidProtocolBufferException();
          }
          return buildPartial();
        }
        
        public proto.response.ResSc.StarCraftData.SCLeave buildPartial() {
          if (result == null) {
            throw new IllegalStateException(
              "build() has already been called on this Builder.");
          }
          proto.response.ResSc.StarCraftData.SCLeave returnMe = result;
          result = null;
          return returnMe;
        }
        
        
        // required uint32 userID = 1;
        public boolean hasUserID() {
          return result.hasUserID();
        }
        public int getUserID() {
          return result.getUserID();
        }
        public Builder setUserID(int value) {
          result.hasUserID = true;
          result.userID_ = value;
          return this;
        }
        public Builder clearUserID() {
          result.hasUserID = false;
          result.userID_ = 0;
          return this;
        }
        
        // optional string leaveReason = 2;
        public boolean hasLeaveReason() {
          return result.hasLeaveReason();
        }
        public java.lang.String getLeaveReason() {
          return result.getLeaveReason();
        }
        public Builder setLeaveReason(java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  result.hasLeaveReason = true;
          result.leaveReason_ = value;
          return this;
        }
        public Builder clearLeaveReason() {
          result.hasLeaveReason = false;
          result.leaveReason_ = getDefaultInstance().getLeaveReason();
          return this;
        }
        
        // @@protoc_insertion_point(builder_scope:StarCraftData.SCLeave)
      }
      
      static {
        defaultInstance = new SCLeave(true);
        proto.response.ResSc.internalForceInit();
        defaultInstance.initFields();
      }
      
      // @@protoc_insertion_point(class_scope:StarCraftData.SCLeave)
    }
    
    // required .StarCraftData.Header header = 1;
    public static final int HEADER_FIELD_NUMBER = 1;
    private boolean hasHeader;
    private proto.response.ResSc.StarCraftData.Header header_;
    public boolean hasHeader() { return hasHeader; }
    public proto.response.ResSc.StarCraftData.Header getHeader() { return header_; }
    
    // repeated .StarCraftData.Player players = 2;
    public static final int PLAYERS_FIELD_NUMBER = 2;
    private java.util.List<proto.response.ResSc.StarCraftData.Player> players_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResSc.StarCraftData.Player> getPlayersList() {
      return players_;
    }
    public int getPlayersCount() { return players_.size(); }
    public proto.response.ResSc.StarCraftData.Player getPlayers(int index) {
      return players_.get(index);
    }
    
    // repeated .StarCraftData.SCLeave leavePlayers = 3;
    public static final int LEAVEPLAYERS_FIELD_NUMBER = 3;
    private java.util.List<proto.response.ResSc.StarCraftData.SCLeave> leavePlayers_ =
      java.util.Collections.emptyList();
    public java.util.List<proto.response.ResSc.StarCraftData.SCLeave> getLeavePlayersList() {
      return leavePlayers_;
    }
    public int getLeavePlayersCount() { return leavePlayers_.size(); }
    public proto.response.ResSc.StarCraftData.SCLeave getLeavePlayers(int index) {
      return leavePlayers_.get(index);
    }
    
    private void initFields() {
      header_ = proto.response.ResSc.StarCraftData.Header.getDefaultInstance();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResSc.StarCraftData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static proto.response.ResSc.StarCraftData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static proto.response.ResSc.StarCraftData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(proto.response.ResSc.StarCraftData prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private proto.response.ResSc.StarCraftData result;
      
      // Construct using proto.response.ResSc.StarCraftData.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new proto.response.ResSc.StarCraftData();
        return builder;
      }
      
      protected proto.response.ResSc.StarCraftData internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new proto.response.ResSc.StarCraftData();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.response.ResSc.StarCraftData.getDescriptor();
      }
      
      public proto.response.ResSc.StarCraftData getDefaultInstanceForType() {
        return proto.response.ResSc.StarCraftData.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public proto.response.ResSc.StarCraftData build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private proto.response.ResSc.StarCraftData buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public proto.response.ResSc.StarCraftData buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.players_ != java.util.Collections.EMPTY_LIST) {
          result.players_ =
            java.util.Collections.unmodifiableList(result.players_);
        }
        if (result.leavePlayers_ != java.util.Collections.EMPTY_LIST) {
          result.leavePlayers_ =
            java.util.Collections.unmodifiableList(result.leavePlayers_);
        }
        proto.response.ResSc.StarCraftData returnMe = result;
        result = null;
        return returnMe;
      }
      
      
      // required .StarCraftData.Header header = 1;
      public boolean hasHeader() {
        return result.hasHeader();
      }
      public proto.response.ResSc.StarCraftData.Header getHeader() {
        return result.getHeader();
      }
      public Builder setHeader(proto.response.ResSc.StarCraftData.Header value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHeader = true;
        result.header_ = value;
        return this;
      }
      public Builder setHeader(proto.response.ResSc.StarCraftData.Header.Builder builderForValue) {
        result.hasHeader = true;
        result.header_ = builderForValue.build();
        return this;
      }
      public Builder mergeHeader(proto.response.ResSc.StarCraftData.Header value) {
        if (result.hasHeader() &&
            result.header_ != proto.response.ResSc.StarCraftData.Header.getDefaultInstance()) {
          result.header_ =
            proto.response.ResSc.StarCraftData.Header.newBuilder(result.header_).mergeFrom(value).buildPartial();
        } else {
          result.header_ = value;
        }
        result.hasHeader = true;
        return this;
      }
      public Builder clearHeader() {
        result.hasHeader = false;
        result.header_ = proto.response.ResSc.StarCraftData.Header.getDefaultInstance();
        return this;
      }
      
      // repeated .StarCraftData.Player players = 2;
      public java.util.List<proto.response.ResSc.StarCraftData.Player> getPlayersList() {
        return java.util.Collections.unmodifiableList(result.players_);
      }
      public int getPlayersCount() {
        return result.getPlayersCount();
      }
      public proto.response.ResSc.StarCraftData.Player getPlayers(int index) {
        return result.getPlayers(index);
      }
      public Builder setPlayers(int index, proto.response.ResSc.StarCraftData.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.players_.set(index, value);
        return this;
      }
      public Builder setPlayers(int index, proto.response.ResSc.StarCraftData.Player.Builder builderForValue) {
        result.players_.set(index, builderForValue.build());
        return this;
      }
      public Builder addPlayers(proto.response.ResSc.StarCraftData.Player value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.Player>();
        }
        result.players_.add(value);
        return this;
      }
      public Builder addPlayers(proto.response.ResSc.StarCraftData.Player.Builder builderForValue) {
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.Player>();
        }
        result.players_.add(builderForValue.build());
        return this;
      }
      public Builder addAllPlayers(
          java.lang.Iterable<? extends proto.response.ResSc.StarCraftData.Player> values) {
        if (result.players_.isEmpty()) {
          result.players_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.Player>();
        }
        super.addAll(values, result.players_);
        return this;
      }
      public Builder clearPlayers() {
        result.players_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .StarCraftData.SCLeave leavePlayers = 3;
      public java.util.List<proto.response.ResSc.StarCraftData.SCLeave> getLeavePlayersList() {
        return java.util.Collections.unmodifiableList(result.leavePlayers_);
      }
      public int getLeavePlayersCount() {
        return result.getLeavePlayersCount();
      }
      public proto.response.ResSc.StarCraftData.SCLeave getLeavePlayers(int index) {
        return result.getLeavePlayers(index);
      }
      public Builder setLeavePlayers(int index, proto.response.ResSc.StarCraftData.SCLeave value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.leavePlayers_.set(index, value);
        return this;
      }
      public Builder setLeavePlayers(int index, proto.response.ResSc.StarCraftData.SCLeave.Builder builderForValue) {
        result.leavePlayers_.set(index, builderForValue.build());
        return this;
      }
      public Builder addLeavePlayers(proto.response.ResSc.StarCraftData.SCLeave value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.leavePlayers_.isEmpty()) {
          result.leavePlayers_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.SCLeave>();
        }
        result.leavePlayers_.add(value);
        return this;
      }
      public Builder addLeavePlayers(proto.response.ResSc.StarCraftData.SCLeave.Builder builderForValue) {
        if (result.leavePlayers_.isEmpty()) {
          result.leavePlayers_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.SCLeave>();
        }
        result.leavePlayers_.add(builderForValue.build());
        return this;
      }
      public Builder addAllLeavePlayers(
          java.lang.Iterable<? extends proto.response.ResSc.StarCraftData.SCLeave> values) {
        if (result.leavePlayers_.isEmpty()) {
          result.leavePlayers_ = new java.util.ArrayList<proto.response.ResSc.StarCraftData.SCLeave>();
        }
        super.addAll(values, result.leavePlayers_);
        return this;
      }
      public Builder clearLeavePlayers() {
        result.leavePlayers_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:StarCraftData)
    }
    
    static {
      defaultInstance = new StarCraftData(true);
      proto.response.ResSc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:StarCraftData)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StarCraftData_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StarCraftData_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StarCraftData_Header_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StarCraftData_Header_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StarCraftData_UnitInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StarCraftData_UnitInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StarCraftData_Player_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StarCraftData_Player_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_StarCraftData_SCLeave_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_StarCraftData_SCLeave_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014res_sc.proto\032\016res_user.proto\"\220\007\n\rStarC" +
      "raftData\022%\n\006header\030\001 \002(\0132\025.StarCraftData" +
      ".Header\022&\n\007players\030\002 \003(\0132\025.StarCraftData" +
      ".Player\022,\n\014leavePlayers\030\003 \003(\0132\026.StarCraf" +
      "tData.SCLeave\032h\n\006Header\022\017\n\007version\030\001 \002(\t" +
      "\022\023\n\013messageType\030\002 \002(\t\022\022\n\nbattleType\030\003 \001(" +
      "\t\022\014\n\004time\030\004 \002(\r\022\026\n\016userIDOfSender\030\005 \002(\r\032" +
      "\206\001\n\010UnitInfo\022\020\n\010stringID\030\001 \002(\t\022\025\n\ntotalB" +
      "uilt\030\002 \001(\005:\0010\022\023\n\010nowExist\030\003 \001(\005:\0010\022\032\n\017wa" +
      "itForBuilding\030\004 \001(\005:\0010\022\022\n\nisBuilding\030\005 \001",
      "(\005\022\014\n\004name\030\006 \001(\t\032\336\003\n\006Player\022\016\n\006userID\030\001 " +
      "\002(\r\022\016\n\006result\030\002 \001(\t\022\022\n\ntotalScore\030\003 \001(\r\022" +
      "\021\n\tunitScore\030\004 \001(\r\022\022\n\nbuildScore\030\005 \001(\r\022\023" +
      "\n\013sourceScore\030\006 \001(\r\022\022\n\nnowMineral\030\007 \001(\r\022" +
      "\016\n\006nowGas\030\010 \001(\r\022\022\n\nallMineral\030\t \001(\r\022\016\n\006a" +
      "llGas\030\n \001(\r\022\025\n\rnumAllProduce\030\013 \001(\r\022\026\n\016nu" +
      "mAllUnitLost\030\014 \001(\r\022\022\n\nnumAllKill\030\r \001(\r\022\023" +
      "\n\013numAllBuild\030\016 \001(\r\022\025\n\rnumAllDestroy\030\017 \001" +
      "(\r\022\032\n\022numAllBuildingLost\030\020 \001(\r\022\016\n\003APM\030\021 " +
      "\001(\002:\0010\022\014\n\004race\030\022 \001(\t\022\021\n\tleaveTime\030\023 \001(\005\022",
      "\017\n\007isLeave\030\024 \001(\t\022&\n\005units\030\025 \003(\0132\027.StarCr" +
      "aftData.UnitInfo\022\030\n\004user\030\026 \001(\0132\n.UserMod" +
      "el\022\r\n\005force\030\027 \001(\005\032.\n\007SCLeave\022\016\n\006userID\030\001" +
      " \002(\r\022\023\n\013leaveReason\030\002 \001(\tB\022\n\016proto.respo" +
      "nseH\002"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_StarCraftData_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_StarCraftData_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StarCraftData_descriptor,
              new java.lang.String[] { "Header", "Players", "LeavePlayers", },
              proto.response.ResSc.StarCraftData.class,
              proto.response.ResSc.StarCraftData.Builder.class);
          internal_static_StarCraftData_Header_descriptor =
            internal_static_StarCraftData_descriptor.getNestedTypes().get(0);
          internal_static_StarCraftData_Header_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StarCraftData_Header_descriptor,
              new java.lang.String[] { "Version", "MessageType", "BattleType", "Time", "UserIDOfSender", },
              proto.response.ResSc.StarCraftData.Header.class,
              proto.response.ResSc.StarCraftData.Header.Builder.class);
          internal_static_StarCraftData_UnitInfo_descriptor =
            internal_static_StarCraftData_descriptor.getNestedTypes().get(1);
          internal_static_StarCraftData_UnitInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StarCraftData_UnitInfo_descriptor,
              new java.lang.String[] { "StringID", "TotalBuilt", "NowExist", "WaitForBuilding", "IsBuilding", "Name", },
              proto.response.ResSc.StarCraftData.UnitInfo.class,
              proto.response.ResSc.StarCraftData.UnitInfo.Builder.class);
          internal_static_StarCraftData_Player_descriptor =
            internal_static_StarCraftData_descriptor.getNestedTypes().get(2);
          internal_static_StarCraftData_Player_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StarCraftData_Player_descriptor,
              new java.lang.String[] { "UserID", "Result", "TotalScore", "UnitScore", "BuildScore", "SourceScore", "NowMineral", "NowGas", "AllMineral", "AllGas", "NumAllProduce", "NumAllUnitLost", "NumAllKill", "NumAllBuild", "NumAllDestroy", "NumAllBuildingLost", "APM", "Race", "LeaveTime", "IsLeave", "Units", "User", "Force", },
              proto.response.ResSc.StarCraftData.Player.class,
              proto.response.ResSc.StarCraftData.Player.Builder.class);
          internal_static_StarCraftData_SCLeave_descriptor =
            internal_static_StarCraftData_descriptor.getNestedTypes().get(3);
          internal_static_StarCraftData_SCLeave_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_StarCraftData_SCLeave_descriptor,
              new java.lang.String[] { "UserID", "LeaveReason", },
              proto.response.ResSc.StarCraftData.SCLeave.class,
              proto.response.ResSc.StarCraftData.SCLeave.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.response.ResUser.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
