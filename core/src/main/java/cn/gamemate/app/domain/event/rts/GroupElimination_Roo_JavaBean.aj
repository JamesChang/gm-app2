// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cn.gamemate.app.domain.event.rts;

import cn.gamemate.app.domain.event.EventCenter;
import cn.gamemate.app.domain.event.rts.RoundRobin;
import cn.gamemate.app.domain.event.rts.RtsEventForce;
import cn.gamemate.app.domain.event.rts.RtsEventForceType;
import cn.gamemate.app.domain.user.User;
import java.lang.Integer;
import java.util.Date;
import java.util.List;

privileged aspect GroupElimination_Roo_JavaBean {
    
    public EventCenter GroupElimination.getEventCenter() {
        return this.eventCenter;
    }
    
    public void GroupElimination.setEventCenter(EventCenter eventCenter) {
        this.eventCenter = eventCenter;
    }
    
    public List<User> GroupElimination.getAdministrators() {
        return this.administrators;
    }
    
    public void GroupElimination.setAdministrators(List<User> administrators) {
        this.administrators = administrators;
    }
    
    public Integer GroupElimination.getDefaultRequiredWin() {
        return this.defaultRequiredWin;
    }
    
    public void GroupElimination.setDefaultRequiredWin(Integer defaultRequiredWin) {
        this.defaultRequiredWin = defaultRequiredWin;
    }
    
    public Integer GroupElimination.getDefaultMaxRound() {
        return this.defaultMaxRound;
    }
    
    public void GroupElimination.setDefaultMaxRound(Integer defaultMaxRound) {
        this.defaultMaxRound = defaultMaxRound;
    }
    
    public RtsEventForceType GroupElimination.getEventForceType() {
        return this.eventForceType;
    }
    
    public void GroupElimination.setEventForceType(RtsEventForceType eventForceType) {
        this.eventForceType = eventForceType;
    }
    
    public Integer GroupElimination.getGameId() {
        return this.gameId;
    }
    
    public void GroupElimination.setGameId(Integer gameId) {
        this.gameId = gameId;
    }
    
    public List<RoundRobin> GroupElimination.getChildren() {
        return this.children;
    }
    
    public void GroupElimination.setChildren(List<RoundRobin> children) {
        this.children = children;
    }
    
    public Date GroupElimination.getCreationDate() {
        return this.creationDate;
    }
    
    public void GroupElimination.setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }
    
    public void GroupElimination.setExpectedRegistrationStartTime(Date expectedRegistrationStartTime) {
        this.expectedRegistrationStartTime = expectedRegistrationStartTime;
    }
    
    public Date GroupElimination.getExpectedRegistrationEndTime() {
        return this.expectedRegistrationEndTime;
    }
    
    public void GroupElimination.setExpectedRegistrationEndTime(Date expectedRegistrationEndTime) {
        this.expectedRegistrationEndTime = expectedRegistrationEndTime;
    }
    
    public Date GroupElimination.getExpectedExtraCheckStartTime() {
        return this.expectedExtraCheckStartTime;
    }
    
    public void GroupElimination.setExpectedExtraCheckStartTime(Date expectedExtraCheckStartTime) {
        this.expectedExtraCheckStartTime = expectedExtraCheckStartTime;
    }
    
    public Date GroupElimination.getExpectedExtraCheckEndTime() {
        return this.expectedExtraCheckEndTime;
    }
    
    public void GroupElimination.setExpectedExtraCheckEndTime(Date expectedExtraCheckEndTime) {
        this.expectedExtraCheckEndTime = expectedExtraCheckEndTime;
    }
    
    public boolean GroupElimination.isAutoExtraCheck() {
        return this.autoExtraCheck;
    }
    
    public void GroupElimination.setAutoExtraCheck(boolean autoExtraCheck) {
        this.autoExtraCheck = autoExtraCheck;
    }
    
    public Integer GroupElimination.getRegistrationLimit() {
        return this.registrationLimit;
    }
    
    public void GroupElimination.setRegistrationLimit(Integer registrationLimit) {
        this.registrationLimit = registrationLimit;
    }
    
    public boolean GroupElimination.isAllowPlayerRegistrationAfterPrepared() {
        return this.allowPlayerRegistrationAfterPrepared;
    }
    
    public void GroupElimination.setAllowPlayerRegistrationAfterPrepared(boolean allowPlayerRegistrationAfterPrepared) {
        this.allowPlayerRegistrationAfterPrepared = allowPlayerRegistrationAfterPrepared;
    }
    
    public boolean GroupElimination.isAllowPlayerRegister() {
        return this.allowPlayerRegister;
    }
    
    public void GroupElimination.setAllowPlayerRegister(boolean allowPlayerRegister) {
        this.allowPlayerRegister = allowPlayerRegister;
    }
    
    public void GroupElimination.setRegisteredForces(List<RtsEventForce> registeredForces) {
        this.registeredForces = registeredForces;
    }
    
}
