// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package cn.gamemate.app.domain.event.rts;

import cn.gamemate.app.domain.event.EventCenter;
import cn.gamemate.app.domain.event.rts.RtsEliminationMatch;
import cn.gamemate.app.domain.event.rts.RtsEventForce;
import cn.gamemate.app.domain.event.rts.RtsEventForceType;
import cn.gamemate.app.domain.user.User;
import java.lang.Integer;
import java.util.Date;
import java.util.List;

privileged aspect RoundRobin_Roo_JavaBean {
    
    public EventCenter RoundRobin.getEventCenter() {
        return this.eventCenter;
    }
    
    public void RoundRobin.setEventCenter(EventCenter eventCenter) {
        this.eventCenter = eventCenter;
    }
    
    public List<User> RoundRobin.getAdministrators() {
        return this.administrators;
    }
    
    public void RoundRobin.setAdministrators(List<User> administrators) {
        this.administrators = administrators;
    }
    
    public Integer RoundRobin.getDefaultRequiredWin() {
        return this.defaultRequiredWin;
    }
    
    public void RoundRobin.setDefaultRequiredWin(Integer defaultRequiredWin) {
        this.defaultRequiredWin = defaultRequiredWin;
    }
    
    public Integer RoundRobin.getDefaultMaxRound() {
        return this.defaultMaxRound;
    }
    
    public void RoundRobin.setDefaultMaxRound(Integer defaultMaxRound) {
        this.defaultMaxRound = defaultMaxRound;
    }
    
    public RtsEventForceType RoundRobin.getEventForceType() {
        return this.eventForceType;
    }
    
    public void RoundRobin.setEventForceType(RtsEventForceType eventForceType) {
        this.eventForceType = eventForceType;
    }
    
    public Integer RoundRobin.getGameId() {
        return this.gameId;
    }
    
    public void RoundRobin.setGameId(Integer gameId) {
        this.gameId = gameId;
    }
    
    public List<RtsEliminationMatch> RoundRobin.getChildren() {
        return this.children;
    }
    
    public void RoundRobin.setChildren(List<RtsEliminationMatch> children) {
        this.children = children;
    }
    
    public Date RoundRobin.getCreationDate() {
        return this.creationDate;
    }
    
    public void RoundRobin.setCreationDate(Date creationDate) {
        this.creationDate = creationDate;
    }
    
    public void RoundRobin.setExpectedRegistrationStartTime(Date expectedRegistrationStartTime) {
        this.expectedRegistrationStartTime = expectedRegistrationStartTime;
    }
    
    public Date RoundRobin.getExpectedRegistrationEndTime() {
        return this.expectedRegistrationEndTime;
    }
    
    public void RoundRobin.setExpectedRegistrationEndTime(Date expectedRegistrationEndTime) {
        this.expectedRegistrationEndTime = expectedRegistrationEndTime;
    }
    
    public Date RoundRobin.getExpectedExtraCheckStartTime() {
        return this.expectedExtraCheckStartTime;
    }
    
    public void RoundRobin.setExpectedExtraCheckStartTime(Date expectedExtraCheckStartTime) {
        this.expectedExtraCheckStartTime = expectedExtraCheckStartTime;
    }
    
    public Date RoundRobin.getExpectedExtraCheckEndTime() {
        return this.expectedExtraCheckEndTime;
    }
    
    public void RoundRobin.setExpectedExtraCheckEndTime(Date expectedExtraCheckEndTime) {
        this.expectedExtraCheckEndTime = expectedExtraCheckEndTime;
    }
    
    public boolean RoundRobin.isAutoExtraCheck() {
        return this.autoExtraCheck;
    }
    
    public void RoundRobin.setAutoExtraCheck(boolean autoExtraCheck) {
        this.autoExtraCheck = autoExtraCheck;
    }
    
    public Integer RoundRobin.getRegistrationLimit() {
        return this.registrationLimit;
    }
    
    public void RoundRobin.setRegistrationLimit(Integer registrationLimit) {
        this.registrationLimit = registrationLimit;
    }
    
    public boolean RoundRobin.isAllowPlayerRegistrationAfterPrepared() {
        return this.allowPlayerRegistrationAfterPrepared;
    }
    
    public void RoundRobin.setAllowPlayerRegistrationAfterPrepared(boolean allowPlayerRegistrationAfterPrepared) {
        this.allowPlayerRegistrationAfterPrepared = allowPlayerRegistrationAfterPrepared;
    }
    
    public boolean RoundRobin.isAllowPlayerRegister() {
        return this.allowPlayerRegister;
    }
    
    public void RoundRobin.setAllowPlayerRegister(boolean allowPlayerRegister) {
        this.allowPlayerRegister = allowPlayerRegister;
    }
    
    public void RoundRobin.setRegisteredForces(List<RtsEventForce> registeredForces) {
        this.registeredForces = registeredForces;
    }
    
}
